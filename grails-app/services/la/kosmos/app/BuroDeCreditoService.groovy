package la.kosmos.app

import grails.transaction.Transactional

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.apache.http.entity.ByteArrayEntity;

import javax.xml.parsers.DocumentBuilderFactory;
import la.kosmos.app.exception.BusinessException
import la.kosmos.app.vo.Constants
import javax.xml.parsers.DocumentBuilder;
import org.hibernate.criterion.DetachedCriteria
import org.hibernate.criterion.Projections
import org.hibernate.criterion.Restrictions
import org.hibernate.criterion.Subqueries
import org.hibernate.transform.Transformers
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import org.xml.sax.InputSource
import groovy.util.XmlParser
import groovy.util.XmlSlurper
import groovy.xml.XmlUtil
import java.io.File;
//import java.text.BreakDictionary;

//@Transactional
class BuroDeCreditoService {

    def sequenceGeneratorService
    def conexionBCService
	

    static transactional = false
	
    def post(String xml,String urlBuroCredito) throws Exception{
        //def URL_BURO_DE_CREDITO =  ConfiguracionKosmos.get(1).urlBuroCredito
        HttpClient client = new DefaultHttpClient();
        //HttpPost post = new HttpPost("${URL_BURO_DE_CREDITO}");
        HttpPost post = new HttpPost(urlBuroCredito);
        HttpEntity entity = new ByteArrayEntity(xml.getBytes("UTF-8"));
        post.setEntity(entity);
        HttpResponse response = client.execute(post);
        String result = EntityUtils.toString(response.getEntity());
        println "Respuesta BURO DE CREDITO ::"+result
        return result
    }
	
	
    def callWebServicePersonasFisicas(def datosBancarios, def datosPersonales, def direccion, SolicitudDeCredito solicitud, idEntidadFinanciera, Usuario usuario){
        def respuesta = [:]

        def criteria = ConfiguracionBuroCredito.createCriteria()
        ConfiguracionBuroCredito configuracion = criteria.get {
            createAlias('configuracionEntidadFinanciera', 'ef')
            eq ('ef.id', idEntidadFinanciera)
            eq ('tipoConsulta', Constants.TipoConsulta.AUTENTICADOR)
        }

        if(configuracion == null) {
            respuesta.error = Boolean.TRUE
            respuesta.errorDesc = "BCS01. Error interno. Contacte al administrador del sistema"
            log.error("Error. No se ha configurado el servicio web de la entidad financiera para la consulta a BC")
            return respuesta
        }

        if(solicitud.reporteBuroCredito != null) {
            def bitacoraBC = this.getRequestBC(solicitud)
            //Valida que no se haya ejecutado una consulta TRADICIONAL anteriormente
            if (bitacoraBC && bitacoraBC.tipoConsulta == Constants.TipoConsulta.TRADICIONAL) {
                respuesta.error = 500
                
                if (solicitud.reporteBuroCredito.errorConsulta == null) {
                    respuesta.errorDesc = "La consulta tradicional ya ha sido ejecutada exitosamente"
                } else {
                    respuesta.errorDesc = "La consulta tradicional falló anteriormente. No se puede enviar la consulta con autenticador"
                }
                return respuesta
            } else {
                //Valida si hubo una consulta previa con AUTENTICADOR que haya sido exitosa o generado un error fatal
                if(solicitud.reporteBuroCredito.errorConsulta == null){
                    respuesta.status = 200 
                    return respuesta
                } else if (!solicitud?.reporteBuroCredito.errorConsulta.contains("ERRR")){
                    respuesta.error = 500
                    respuesta.errorDesc = "No se obtuvo el reporte de buró de crédito en un primer intento. En breve recibirás ayuda."
                    log.error("No se obtuvo el reporte de buró de crédito en un primer intento. Solicitud: " + solicitud.id)
                    return respuesta
                }
            }
        }
        
        def referenciaOperador = sequenceGeneratorService.nextNumber('REFERENCIA_LIB')
        StringBuilder soap = new StringBuilder()
        soap.append("<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:bean=\"http://bean.consulta.ws.bc.com/\">")
        soap.append("<soapenv:Header/>")
        soap.append("<soapenv:Body>")
        soap.append("<bean:consultaXML>")
        soap.append("<Consulta>")
        soap.append("<Personas>")
        soap.append("<Persona>")
        soap.append("<Encabezado>")
        soap.append("<Version>${configuracion.encabezadoVersion}</Version>")
        //soap.append("<NumeroReferenciaOperador>1234567890     1234567890</NumeroReferenciaOperador>")
        soap.append("<NumeroReferenciaOperador>${referenciaOperador}</NumeroReferenciaOperador>")
        soap.append("<ProductoRequerido>${configuracion.encabezadoProductoRequerido}</ProductoRequerido>")
        soap.append("<ClavePais>${configuracion.encabezadoClavePais}</ClavePais>")
        soap.append("<IdentificadorBuro>${configuracion.encabezadoIdentificadorBuro}</IdentificadorBuro>")
        soap.append("<ClaveUsuario>${configuracion.encabezadoClaveUsuario}</ClaveUsuario>")
        soap.append("<Password>${configuracion.encabezadoPassword}</Password>")
        soap.append("<TipoConsulta>${configuracion.encabezadoTipoConsulta}</TipoConsulta>")
        soap.append("<TipoContrato>${configuracion.encabezadoTipoContrato}</TipoContrato>")
        soap.append("<ClaveUnidadMonetaria>${configuracion.encabezadoClaveUnidadMonetaria}</ClaveUnidadMonetaria>")
        soap.append("<ImporteContrato></ImporteContrato>")
        soap.append("<Idioma>${configuracion.encabezadoIdioma}</Idioma>")
        soap.append("<TipoSalida>${configuracion.encabezadoTipoSalida}</TipoSalida>")
        soap.append("</Encabezado>")
        soap.append("<Nombre>")
        soap.append("<ApellidoPaterno>"+datosPersonales?.apellidoPaterno.toUpperCase()+"</ApellidoPaterno>")
        soap.append("<ApellidoMaterno>"+datosPersonales?.apellidoMaterno.toUpperCase()+"</ApellidoMaterno>")
        soap.append("<ApellidoAdicional></ApellidoAdicional>")
        soap.append("<PrimerNombre>"+datosPersonales?.nombre.toUpperCase()+"</PrimerNombre>")
        soap.append("<SegundoNombre></SegundoNombre>")
        soap.append("<FechaNacimiento>"+obtenerFechaTipo2("${datosPersonales?.fechaDeNacimiento.dia}","${datosPersonales?.fechaDeNacimiento.mes}","${datosPersonales?.fechaDeNacimiento.anio}")+"</FechaNacimiento>")
        soap.append("<RFC>${datosPersonales?.rfc}</RFC>")
        soap.append("<Prefijo></Prefijo>")
        soap.append("<Sufijo></Sufijo>")
        soap.append("<Nacionalidad>MX</Nacionalidad>")
        soap.append("<Residencia>1</Residencia>")
        soap.append("<NumeroLicenciaConducir></NumeroLicenciaConducir>")
        if(datosPersonales?.estadoCivil == 1){
            soap.append("<EstadoCivil>S</EstadoCivil>")  
        }else{
            soap.append("<EstadoCivil>M</EstadoCivil>")
        }
        if(datosPersonales?.genero == 1){
            soap.append("<Sexo>M</Sexo>")  
        }else{
            soap.append("<Sexo>F</Sexo>")
        }
        soap.append("<NumeroCedulaProfesional></NumeroCedulaProfesional>")
        soap.append("<NumeroRegistroElectoral></NumeroRegistroElectoral>")
        soap.append("<ClaveImpuestosOtroPais></ClaveImpuestosOtroPais>")
        soap.append("<ClaveOtroPais></ClaveOtroPais>")
        soap.append("<NumeroDependientes></NumeroDependientes>")
        soap.append("<EdadesDependientes></EdadesDependientes>")
        soap.append("</Nombre>")
        soap.append("<Domicilios>")
        soap.append("<Domicilio>")

        String numeroInterior = (direccion.numeroInterior) ? " " + direccion.numeroInterior.trim().toUpperCase() : ""
        String domicilio = direccion?.calle.toUpperCase() + " " + direccion?.numeroExterior.toUpperCase() + numeroInterior

        String direccion2 = ""
        if (domicilio.size() > 40) {
            String direccion1 = domicilio.substring(0, 40)
            direccion2 = domicilio.substring(40)
            domicilio = direccion1
        }

        soap.append("<Direccion1>" + domicilio + "</Direccion1>")
        soap.append("<Direccion2>" + direccion2 + "</Direccion2>")
        soap.append("<ColoniaPoblacion>"+direccion?.colonia.toUpperCase()+"</ColoniaPoblacion>")
        Municipio municipio = Municipio.findById(direccion?.delegacion)
        soap.append("<DelegacionMunicipio>"+municipio.nombre.toUpperCase()+"</DelegacionMunicipio>")
        soap.append("<Ciudad></Ciudad>")
        Estado estado = Estado.findById(direccion?.estado)
        soap.append("<Estado>"+estado.siglasrenapo.toUpperCase()+"</Estado>")
        soap.append("<CP>${direccion?.codigoPostal}</CP>")
        soap.append("<FechaResidencia></FechaResidencia>")
        soap.append("<NumeroTelefono></NumeroTelefono>")
        soap.append("<Extension></Extension>")
        soap.append("<Fax></Fax>")
        soap.append("<TipoDomicilio></TipoDomicilio>")
        soap.append("<IndicadorEspecialDomicilio></IndicadorEspecialDomicilio>")
        soap.append("</Domicilio>")
        soap.append("</Domicilios>")
        soap.append("<Empleos>")
        soap.append("<Empleo>")
        soap.append("<NombreEmpresa></NombreEmpresa>")
        soap.append("<Direccion1></Direccion1>")
        soap.append("<Direccion2></Direccion2>")
        soap.append("<ColoniaPoblacion></ColoniaPoblacion>")
        soap.append("<DelegacionMunicipio></DelegacionMunicipio>")
        soap.append("<Ciudad></Ciudad>")
        soap.append("<Estado></Estado>")
        soap.append("<CP></CP>")
        soap.append("<NumeroTelefono></NumeroTelefono>")
        soap.append("<Extension></Extension>")
        soap.append("<Fax></Fax>")
        soap.append("<Cargo></Cargo>")
        soap.append("<FechaContratacion></FechaContratacion>")
        soap.append("<ClaveMonedaSalario></ClaveMonedaSalario>")
        soap.append("<Salario></Salario>")
        soap.append("<BaseSalarial></BaseSalarial>")
        soap.append("<NumeroEmpleado></NumeroEmpleado>")
        soap.append("<FechaUltimoDiaEmpleo></FechaUltimoDiaEmpleo>")
        soap.append("</Empleo>")
        soap.append("</Empleos>")
        soap.append("<CuentaC>")
        soap.append("<NumeroCuenta></NumeroCuenta>")
        soap.append("<ClaveOtorgante></ClaveOtorgante>")
        soap.append("<NombreOtorgante></NombreOtorgante>")
        soap.append("</CuentaC>")
        soap.append("<Autentica>")
        soap.append("<TipoReporte>${configuracion.autenticaTipoReporte}</TipoReporte>")
        soap.append("<TipoSalidaAU>${configuracion.autenticaTipoSalidaAU}</TipoSalidaAU>")
        //soap.append("<ReferenciaOperador>GAMR550127HW4            </ReferenciaOperador>")
        soap.append("<ReferenciaOperador>${referenciaOperador}</ReferenciaOperador>")
						  
        if(datosBancarios.tarjeta.equalsIgnoreCase("SI")){
            soap.append("<TarjetaCredito>V</TarjetaCredito>")  
            soap.append("<UltimosCuatroDigitos>${datosBancarios.numeroTarjeta}</UltimosCuatroDigitos>")
        }else{
            soap.append("<TarjetaCredito>F</TarjetaCredito>")
        }
        if(datosBancarios.hipoteca.equalsIgnoreCase("SI")){
            soap.append("<EjercidoCreditoHipotecario>V</EjercidoCreditoHipotecario>")
        }else{
            soap.append("<EjercidoCreditoHipotecario>F</EjercidoCreditoHipotecario>")
        }
        if(datosBancarios.creditoAutomotriz.equalsIgnoreCase("SI")){
            soap.append("<EjercidoCreditoAutomotriz>V</EjercidoCreditoAutomotriz>")
        }else{
            soap.append("<EjercidoCreditoAutomotriz>F</EjercidoCreditoAutomotriz>")
        }
        soap.append("</Autentica>")
        soap.append("<Caracteristicas>")
        soap.append("<Plantilla></Plantilla>")
        soap.append("</Caracteristicas>")
        soap.append("</Persona>")
        soap.append("</Personas>")
        soap.append("</Consulta>")
        soap.append("</bean:consultaXML>")
        soap.append("</soapenv:Body>")
        soap.append("</soapenv:Envelope>")
	 
	
        String response =null
	String soap_request = cambiarCaracteresEspeciales(soap.toString());
	println "Request Buro de Credito::::::> "+ soap_request
	 
        try{
            if(configuracion.habilitarMockBuroCredito){
                if(configuracion.habilitarMockBuroCreditoSuccess){
                    //Response SUCCESS
                    //DATO JORGE PROD 504
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL111234567890     1234567890MX1010KK7687100110PN06MEDINA0005ROSAS0205JORGE0307ARMANDO0408240419850513MERJ850424UJ90602SR0802MX090111101S1201M1518MERJ850424HDFDSR04PA37PROL ANDRES SOLER 7 SUPER MZA NA MZ 40020LT 7 EDIF NANIVEL  30205LERMA0402EM050552004120830092015PA24CTO UNIV TECNOLOGICA S N0215NETZAHUALCOYOTL0318CD NETZAHUALCOYOTL0402EM050557000120814122013PA19PALOMA SILVESTRE 350111LAS PALOMAS0206TOLUCA0402EM050550180070772221901001H120813062009PA22PALOMA SILVESTRE NO 350111LAS PALOMAS0206TOLUCA0402EM050550261060808041986071072221909721001H120829072008PE17IUSACELL SA DE CV0000110801012007170808092015PE10NOVUTEK SC0013AV TOKIO 80 00122CUAUHTEMOC, CUAUHTEMOC0310CUAUHTEMOC0502DF060506600170811082014TL08011120160205BANCO030100501I0601R0702CC0802MX1101Z120101308250720121408241020161508311020161708311020161801A21053187022056141+23061300002401026020127241111111111111111111111112808110920162908110620123103040TL08261020160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z12032301308010520101408141020161508141020161708221020161801A2104360022051731+230440002401026020127241111111U111111111UUUUUUU280822092016290822072013TL08121020160205BANCO030100501I0601R0702CC0802MX1101Z12031801308011020121408061020161508300920161708061020161801A2104458422053758+230518000240102602012724111111111111111111111111280830092016290830012013TL08111020160205BANCO030100501I0601I0702PL0802MX10031191101S12036291308150820161408190920161508150820161708300920161801A210540000220640129+240102602012701028083008201629083008201636010370831082016380200TL08131020160216HIPOTECAGOBIERNO030100501I0601M0702RE0802MX10033601101M120460231308240920141408290920161508240920141708300920161801A21065930992207562567+2306593099240102602012712111111111111280830082016290830092015TL08111020160205BANCO030100501I0601R0702CC0802MX1101Z120101308081220101408150820161508030120141708300920161801A21054965622020+230611120024010260201271911111111XUUUU1111112808300820162908280220153002IATL08131020160214COMUNICACIONES030100501I0601R0702CL0802MX1101Z120101308280520141408160920161508020920161708300920161801A2104150822020+23041000240102602012724111111111111111111111111280830082016290830052014TL08020620160205BANCO030100501I0601R0702CC0802MX1101Z120101308140520101408270120161508120220161608130520161708310520161801A2104651422020+2305750002401026020127241111111111111111111111112808290420162908311220103002CCTL08070320150205BANCO030100501I0601R0702CC0802MX1101Z120101308081220101408160120151508030120141608280220151708280220151801A21054965622020+230549400240102602UR271311UUUUUUU11112808310120152908310120143002LSTL08171020140205BANCO030100501I0601R0702CC0802MX1101Z120101308010420141608300920141708300920141801A2101022020+23011240102602013002CCTL08040720140205BANCO030100501I0601R0702CC0802MX1101Z120101308310120131608110620141708300620141801A2101022020+230523000240102602012717UUUUUUUUUUUUUU0002808310520142908310120133002CC36010370831012013380200TL08030920140214COMUNICACIONES030100501I0601R0702CL0802MX1101Z120101308210520101408200520141608300620141708300620141801A210396422020+230415002401026020127241111111111111111111111112808310520142908300620113002CCTL08110620140205BANCO030100501I0601I0702AU0802MX1002601101M120101308201220121408030620141608030620141708090620141801A210619014522020+2401026020127181111111111111111102808300520142908311220123002CC310300136010370831122012380200TL08100220140205BANCO030100501I0601R0702CC0802MX1101Z120101308081220101408200120141508030120141608310120141708310120141801A21054965622020+230576000240102602UR27241111111111111111111111112808311220132908051220103002LSTL08081120120205BANCO030100501I0601R0702CC0802MX1101Z120101308130620091408310720121508310320121608081020121708311020121801A2104459322020+23051880024010260201272211111111111111111111112808300920122908311220103002CCTL08290320110205BANCO030100501I0601I0702AU0802MX09062164301002601101M120101308180820081408100220111508180820081608100220111708280220111801A210614068022020+240102602012702112808310120112908311220103002CCIQ0807112016000400000215BURO DE CREDITO0308544948320402CC0502MX06090000000000801Y09011IQ08071120160110KK768710010206KOSMOS0402CC060100701I09010IQ08260920160205BANCO0402CC060100701I09010IQ08150820160205BANCO0402UK060100701I09010IQ08300520160205BANCO0402UK060100701I09010IQ08080520160205BANCO0402UK060100701I09010IQ08060320160205BANCO0402UK060100701I09010IQ08061220150205BANCO0402UK060100701I09010IQ08080920150205BANCO0402UK060100701I09010IQ08161220140205BANCO0402CC060100701I09010IQ08081220140205BANCO0402UK060100701I09010RS08290720080002000102000202000302000402000502000602140702000802020904001610040004110400121204000913040000140400001502001602041701N1805NNNNN1901N2002MX210900009121822090002642002310000011630+24090000000002509000000410260300427090006330992810000602696+29090000000003009000006652310200320200330200340818082008350815082016360210370830052016380200390800000000400200410800000000HI080711201600030020116BURO DE CREDITO 0221NO EXISTE INFORMACIONHR080711201600038600116BURO DE CREDITO 0244TELEFONO 722219972 CORRESPONDE A NUMERO FIJOSC08BC SCORE000300701040723020204SC08BC SCORE000300401040009020320503032100403100ES0505132001012657991840102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //DATO OSCAR PROD. 504
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL111234567890     1234567890MX1010KK7687100110PN08CASTILLO0006NESTOR0205OSCAR0307EDUARDO0408060219860513CANO860206CB80602SR0802MX090131101S1201M1518CANO860206HDFSSS00PA27SN ANTONIO MARIA ZACARIA 760116RANCHO SAN DIMAS0216SN ANTONIO LA IA0402EM05055228207107224321587120818042016PA11CEREZOS 9430011CASA BLANCA0207METEPEC0307METEPEC0402EM050552150120828022014PA29SN ANTONIO MARIA ZACARIA MZ340013RCHO SN DIMAS0216SN ANTONIO LA IA0402EM050552282120831122013PA17PROL 16 DE SEP 680024LOC SN LUCAS TEPEMAJALCO0128PUEBLO SAN LUCAS TEPEMAJALCO0216SN ANTONIO LA IA0402EM050552280060811112000071071713203281001H120829042005PE30SISTEMA ESTATAL DE INFORMATICA0000071172201320328170824052009PE17NUUPTECH SA DE CV0000TL08311020160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120101308280520091408031020161508091020161708301020161801A2104766422056958+230480002401026020127241UU111211111121212111211280830092016290830122010370830042014TL08211020160214COMUNICACIONES030100501I0601O0702CL0802MX1101M12033481308140420121408211020161508150920161708211020161801A2104106822020+23012240102602012724111111111111111111211111280821092016290821032012370830042014380202TL08111020160205BANCO030100501I0601R0702CC0802MX1101Z1202281308011020111408031020161508300920161708031020161801A210474392204593+230434002401026020127241111111111111111111112112808300920162908201020113603350370805042014380202TL08131020160214COMUNICACIONES030100501I0601R0702CL0802MX1101Z12037491308270520151408040620151508020420161708300920161801A21037492204749+23041000240374925011260296271677777765432211112808300820162908300520153603749370830092015380202TL08190820150210AUTOMOTRIZ030100501I0601I0702AU0802MX1002481101M120101308160720131408100820151508160720131608100820151708160820151801A210620188022020+23062018802401025011260201272411111113211111143211111128081607201529081607201336046253370830042014380204TL08060920140205BANCO030100501I0601R0702CC0802MX1101Z120101308310520101408180820141508290120141608180820141708310820141801A21056377622020+23057980024054063125015260297271065432111112808310720142908021020133002LC360515363370831072014380206TL08300420140214COMUNICACIONES030110501I0601R0702CL0802MX100101101M120410211308240220141408310320141708300420142104154122051021+2304100024010260201270211280830032014290828022014TL08121120130205BANCO030100501I0601R0702CC0802MX1101Z120101308310520101408031020131508211020131608311020131708311020131801A21054833222020+230579800240102602UR27241111111111111111111111112808300920132908311220103002LSTL08300520130205BANCO030100501I0601R0702CC0802MX1101Z120101308290520061408280220131508240420121608280220131708010320131801C1908310720062104536422020+2304299024043218250162602972724X654321121121111111111112808010220132908311220103002LC370831032013TL08060920120214COMUNICACIONES030100501I0601O0702CL0802MX1101Z120101308300420081408180420121508120720121608310820121708310820121801A210356322020+23011240102602012720111111111111121211112808310720122908311220103002CC370830062011TL08100820120214COMUNICACIONES030100501I0601R0702CL0802MX1101Z120101308240420101408020620121608020620121708310720121801A210366022020+2304100024010260201271911111111111112111112808300620122908311220103002CC3603645370831052011IQ0807112016000400000215BURO DE CREDITO0308544948320402CC0502MX060900000000009011IQ08071120160110KK768710010206KOSMOS0402CC060100701I09010IQ08180920160205BANCO0402CC060100701I09010IQ08310820160205BANCO0402CC060100701I09010IQ0818042016000400000203SIC0402CC0502MX060900000000009011IQ08180420160216CONSUMIDOR FINAL0402UK060100701I09010IQ08130420160205BANCO0402CC060100701I09010IQ08221120140205BANCO0402CC060100701I09010RS08070720040002000102000202000302000402000502000602070702000802010904001110040001110400101204000613040003140400061502001602031701N1805NNYNY1901N2002MX210900001846122090000134002310000009321+24090000445982509000002146260307027090000000002810000000000+29090000000003009000000000310201320202330200340829052006350827052015360207370831082016380200390800000000400200410800000000HI080711201600030020116BURO DE CREDITO 0221NO EXISTE INFORMACIONHR080711201600038700116BURO DE CREDITO 0246TELEFONO 7224321587 CORRESPONDE A NUMERO MOVILHR080711201600038900116BURO DE CREDITO 0243COLONIA NO COINCIDE CON CODIGO POSTAL 52280HR080711201600038500116BURO DE CREDITO 0248TELEFONO 7224321587 NO CORRESPONDEA ZONA POSTAL HR080711201600038600116BURO DE CREDITO 0244TELEFONO 717132328 CORRESPONDE A NUMERO FIJOSC08BC SCORE000300701040587020221030231SC08BC SCORE00030040104000702031660302460403205ES0504509001012658975950102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000388850               MX1010FF2407253910PN06MONTES0006GARAYS0206BRENDA0305ALLIN0408241019950513MGBA921224JD40802MX090131101S1201M1418MOGABA92122413H4001518MGBA921224HMNDOP08170201PA18LUPA BELIZIANA 1210113LUPA CLOORIDA0209TARIMOROS0404MICH0505578601001H120806052016PA18LUPA BELIZIANA 1210207MORELIA0404MICH0505583101001H1101K120820012016PA16LIMA PERSANA 1070113LUPA CLOORIDA0207MORELIA0404MICH0505582261001H1101K120806012016PA18LUPA BELIZIANA 1220022AMPL GERONIMIZ SOTELOZ0122AMPL GERONIMIZ SOTELOZ0307MORELIA0404MICH0505581161001H120818102014TL08300420160215MICROFINANCIERA030110501I0601I0702PL0802MX1002161101W120422001308110920151408291220151508110920151708300420162104878622055521+23010240455202602022724UUU2UUU2UUU2UUU2UUU1UUU128083004201629080101190136046336370831122015380202TL08281120150215MICROFINANCIERA030110501I0601I0702PL0802MX1002161101W120101308150620151508150620151608110920151708281120152104878622020+23010240102602012720UUUUUUUUUUU1UUU1UUU1280828112015290801011901IQ08030920160110FF240725390212LIBERTAD SFP060100701I09010IQ0803092016000400000215BURO DE CREDITO0402UK0502MX060900000000009011IQ08060520160110FF240725390212LIBERTAD SFP060100701I09010IQ0806052016000400000215BURO DE CREDITO0402UK0502MX060900000000009011IQ08020520160205BANCO0402CC060100701I09010IQ0802052016000400000215BURO DE CREDITO0402UK0502MX060900000000009011IQ08200120160203SIC0402UK060100701I09010IQ0820012016000400000206BANCOS0402UK0502MX060900000000009011IQ08060120160203SIC0402UK0502MX060460000701I09010IQ0806012016000400000215MICROFINANCIERA0402UK0502MX060900000600009011IQ0819112015000400000216SOCIEDAD FINANCI0402UK0502MX060900000700009011IQ08060620150203SIC0402CL060100701I09010IQ0806062015000400000215MICROFINANCIERA0402UK0502MX060900000000009011IQ08181020140205BANCO0402CC060100701I09010IQ0818102014000400000215BURO DE CREDITO0402UK0502MX060900000000009011RS08070620140002000102000202000302000402000502010602010702000802000904000210040002110400001204000113040001140400001502001602051701N1805NNNNN1901N2002MX210900000000022090000000002310000000000+24090000000002509000000000260300027090000087862810000005521+29090000055203009000002200310200320200330200340811092015350815062015360214370820012016380200390800000000400200410800000000SC08BC SCORE00030070104-009SC08BC SCORE00030040104-003ES0502318001012368324250102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000384071               MX1010FF2407253910PN06ORTIGA0005CATLA0204ROLY0308CECILIAI0408221119910513ORCR9911229S80802MX090111101D1201F170201PA18PA PALO ALTO 202 30109PALO ALTO0215SN JUAN DEL RIO0403QRO050576734060808078906070794008741001H1101K120808015016PA14TELADEMUCIO SN0210TEOCOLUCAN0402EM050554786120825022015PA33NACARANDAS 34 L 6 RBA CREO DEL MT0210TEOCOLUCAN0402EM050553250120815032011PA14SN PEDRO PALMA0012JALPANDESERA0115SAN PEDRO PALMA0212JALPANDESERA0402DF050503230120805112013PE04ER&F0000071142759400875170816052016PE08TYFRGEHL00001003DIR110812042012170808012016TL08240820160216TIENDA COMERCIAL030110501I0601I0702AF0802MX1002781101W120327013081702201614081708201615081702201617082408201621051047722057102+23010240313526020227242111211111211111111111112808240820162908010119013603135370808062016380202TL08230820160216TIENDA COMERCIAL030110501I0601I0702CL0802MX10031281101W1203660130814062016140809082016150814062016170823082016210528165220626405+230102403440260202271021212111112808230820162908010119013603440370823082016380202TL08230820160216TIENDA COMERCIAL030110501I0601O0702PL0802MX100101101W12031621308160220161408160820161508230220161708230820162104359322053593+23010240310826020227241111111111111111111111112808230820162908010119013603108370823082016380202TL08170820160205BANCO030100501I0601R0702CC0802MX1101Z120101308120420161408120820161508130720161708120820161801A210525152220624884+230525000240102602012704111028081007201629081004201636010370830042016380200TL08080820160205BANCO030100501I0601I0702PN0802MX100151101S12039091308100620161408020820161508100620161708020820161801A210552000220651084+2401026020127021028080207201629080206201636010370830062016380200TL08080820160205BANCO030100501I0601I0702PN0802MX10031191101S12033901308210720161508210720161708310720161801A210525000220625194+24010260200TL08290720160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120101308160520161708220720161801A2101022020+23043500240102602UR2702UU280822062016290822052016TL08280920150216TIENDA COMERCIAL030100501I0601I0702AF0802MX1002121101M120101308030320151408180320151608310820151708310520151801A2101022020+23041994240102602013002CCTL08310320140210FINANCIERA030110501I0601I0702CT0802MX1002161101W120101308171220131408250320141508171220131608250320141708310320142104500022020+23010240102602012712UUU1UUU1UUU1280831032014290801011901TL08100220140214COMUNICACIONES030100501I0601O0702CL0802N\$1101Z120101308091220131508130120141608310120141708310120141801A210372222020+24010260201270112808311220132908311220133002CCIQ08270820160110FF240725390212LIBERTAD SFP060100701I09010IQ0827082016000400000215BURO DE CREDITO0402UK0502MX060900000000009011IQ08100620160205BANCO0402UK060100701I09010IQ08160520160216TIENDA COMERCIAL0402CC060100701I09010IQ08120420160205BANCO0402UK060100701I09010IQ08010220160203SIC0402UK060100701I09010IQ0801022016000400000206BANCOS0402UK0502MX060900000000009011IQ08080120160205BANCO0402UK060100701I09010IQ0822042015000400000216REPORTE DE CREDI0402UK0502MX060900000000109011IQ08250220150205BANCO0402AF0502N\$060450000701I09010IQ08260120150203SIC0402UK0502N\$060480000701I09010IQ0826012015000400000206BANCOS0402UK0502MX060900000800009011RS08051120130002000102000202000302000402000502030602050702010802010904001010040006110400041204000313040003140400001502001602041701N1805NNNNN1901N2002MX210900002874522090000285002310000028477+24090000001082509000000162260310027090001156422810000109785+29090000005753009000002229310200320200330200340809122013350821072016360211370827082016380200390800000000400200410800000000SC08BC SCORE000300701040644020228030213040204SC08BC SCORE000300401040005020316603032000403205ES0503652001012329500860102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000457988               MX1010FF2407253910PN08PEREIREZ0007ROSALES0206ISELDA0408150719890513PERI8907154I60802MX090131101M1201F1418PERIIM89071507M9001518PERI890715MCSNRM011602MX170203PA13CALZ CONCAUPO0114SAN JUAN TERAN0216TIXTLA GONZALEZB0403CHS050529093071096121080461001C1101K120812092016PA17CZ CONASUPO 104 00116CAMPESTRE ARENAL0216TIXTLA GONZALEZB0403CHS0505290571001H1101K120821072016PA15C 6A OTE NTE SN0109GUADALUPE0210JILUIPILAS0310JILUIPILAS0403CHS0505304301001H120805062016PA215A NTE NCONASUPON 1040105TERAN0216TIXTLA GONZALEZB0316TIXTLA GONZALEZB0403CHS050529050071096121222441001H1101K120827012016PE10SIN NOMBRE0000110816032008PE15PANADERIA LOS 60000TL08281120160216TIENDA COMERCIAL030110501I0601I0702CL0802MX10031281101W1203848130820062016140807112016150820062016170828112016210527473220623198+230102403636260202272322111122121111112U111112808281020162908281220143603636370828112016380202TL08281120160216TIENDA COMERCIAL030110501I0601O0702PL0802MX100101101W12028413081209201614081411201615081209201617082811201621039242204924+23010240263260202271121111121111280828102016290828122015360263370828112016380202TL08081120160210FINANCIERA030100501I0601I0702PL0802MX1002521101W12039241308210920161408061120161508210920161708061120161801A2104584922055115+23010240102602012703111280806102016290806082016TL08101120160215MICROFINANCIERA030100501I0601I0702PL0802MX1002181101M120436581308211020161408211020161508211020161708311020161801A210530000220662186+24010260201TL08071120160210FINANCIERA030100501I0601I0702PL0802MX10031041101W12033131308130720161408281020161508130720161708311020161801A210513378220612726+2401026020127031122808240920162908240720163603314370831072016380202TL08071120160205BANCO030100501I0601R0702CC0802MX1101Z12031501308050620161408231020161508231020161708311020161801A21051000022057633+2305100002401026020127041111280825092016290825062016TL08311020160215MICROFINANCIERA030110501I0601I0702PL0802MX100181101M120418171308220720161408010920161508220720161708311020162104881922058234+23010240102602012703111280830092016290831072016TL08051020160214COMUNICACIONES030110501I0601O0702CL0802MX100101101M120455931308271220151408310320161508310320161708051020162104405622055593+230102404153726020227021228080509201629080508201636041565370802082016380202TL08150720160210FINANCIERA030100501I0601I0702PL0802MX1002911101W120101308120220161408130720161508120220161608130720161708130720161801A21051229622020+240102602012706111111280806062016290806012016TL08060620110205BANCO030100501I0601I0702PL0802MX1002101101K120101308221220101408110520111508221220101608120520111708310520111801A21051000222020+24010260201270411112808300420112908310120113002CCTL08221220100205BANCO030110501I0601I0702PL0802MX1002101101K1201013082807201014081512201015082807201016081612201017082212201021051000222020+23010240102602013002CC3603855370826082010380202IQ0801122016000400000215BURO DE CREDITO0308544948320402UK0502MX060900000000009011IQ08011220160110FF240725390212LIBERTAD SFP060100701I09010IQ0825112016000400000215MICROFINANCIERA0402CC0502MX060900000000009011IQ08251120160203SIC0402UK060100701I09010IQ0820102016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08201020160215MICROFINANCIERA0402CS060100701I09010IQ08121020160216TIENDA COMERCIAL0402AF060100701I09010IQ0807102016000400000215MICROFINANCIERA0402CC0502MX060900001500009011IQ08071020160203SIC0402UK0502MX0605150000701I09010IQ08150920160210FINANCIERA0402PL0502MX060455600701I09010IQ0812092016000400000209SERVICIOS0402CC0502MX060900000000009011IQ08120920160203SIC0402UK060100701I09010IQ0821072016000400000215MICROFINANCIERA0402CC0502MX060900000800009011IQ08210720160203SIC0402UK0502MX060480000701I09010IQ0811072016000400000216REPORTE DE CREDI0402CC0502MX060900000000009011IQ0811072016000400000203SIC0402CC0502MX060900000000009011IQ08110720160216CONSUMIDOR FINAL0402UK060100701I09010IQ08110720160216REPORTE ESPECIAL0402TE060100701I09010IQ08240620160210FINANCIERA0402PL0502MX0605100000701I09010IQ0820062016000400000206BANCOS0402CC0502MX060900000000009011IQ08200620160203SIC0402UK060100701I09010IQ0805062016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08050620160205BANCO0402CL060100701I09010IQ08090220160210FINANCIERA0402PL0502MX060450000701I09010IQ0827012016000400000206BANCOS0402CC0502MX060900000000009011IQ08270120160203SIC0402UK060100701I09010RS08231220040002000102000202000302000402000502030602080702000802000904001110040008110400031204000313040003140400011502001602221701N1805NNNNN1901N2002MX210900001498022090000100002310000014150+24090000016002509000005827260314227090000855192810000111459+29090000006363009000007560310200320200330200340822122010350822072016360225370827012016380200390800000000400200410800000000SC08BC SCORE000300701040622020228030215040209SC08BC SCORE000300401040003020316603032000403205ES0504810001012816096100102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //response ="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000399670               MX1010FF2407253910PN07TENOREZ0005SORIA0207SILVANA0309GABRIELAT0408031219850513TESG851203GA80802MX090111101S1201F1418THYJGL85120322M0001418TESG851203MQGHPL07170201PA12PRO SUR 34 C0106CENTRO0203QRO0403QRO050576000120812022016PA14RORDIHLERA 1240117LUMBRES DEL POBRE0211CORREGIDORA0403QRO050573503070744223451001H120807092012PE27ESTETICA UNISEX PROFESIONAL0011QRO SUR 21B0206CERRRO0303QRO0403QRO0503QRO060576320071144201679024170805072015PE24TRABAJADOR INDEPENDIENTE0011QRO SUR 42B0206CERRRO0303QRO0403QRO0503QRO060576000TL08060920160216TIENDA COMERCIAL030110501I0601O0702PL0802MX100101101W1203373130819032013140830082016150823082016170806092016210512658220612658+23010240102602012724111111112111112111121212280806082016290806092014360221370801072014380202TL08060920160205BANCO030100501I0601R0702CC0802MX1101Z12032501308270720161708310820161801A21051000022053994+23051000024010260201TL08080920160210FINANCIERA030100501I0601R0702CC0802MX1101Z1308120820161508120820161708310820161801A210330822052156+2304290024010260200TL08230820160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z12033981308010520151408200820161508050820161708210820161801A2104374122052777+23043500240102602012715121111111111111280821072016290821052015360268370817062016380202TL08080820160215MICROFINANCIERA030100501I0601I0702PL0802MX1002121101M120101308090920151408110720161508090920151608110720161708310720161801A2104500022020+2301024010260201271011111111102808300620162908300920153002CC36010370830092015380200TL08070920150215MICROFINANCIERA030100501I0601I0702PL0802MX1002121101M120101308050820141408120820151508050820141608120820151708310820151801A2104700022020+2401026020127121111111111102808310720152908160820143002CC36010370831082014380200TL08250420140216TIENDA COMERCIAL030110501I0601I0702AF0802MX1002121101M12010130817112012140801122012150817112012160801122012170825042014210359222020+230515300240102602012717UUUUUUUUUUUUUUUU1280825032014290825112012TL08250420140216TIENDA COMERCIAL030110501I0601I0702AF0802MX1002121101M12010130820112012140801122012150820112012160801122012170825042014210336822020+230515300240102602012717UUUUUUUUUUUUUUUU1280825032014290825112012TL08250420140216TIENDA COMERCIAL030110501I0601I0702AF0802MX1002121101M120101308291220121408010420131508291220121608010420131708250420142104322022020+230515300240102602012716UUUUUUUUUUUU1UU1280825032014290825122012TL08010520130216TIENDA COMERCIAL030110501I0601R0702CL0802MX100101101M120101308151120121408010520131508151120121608010520131708010520132104137922020+2305153002401026020127061UU1U1280801042013290801112012IQ08190920160110FF240725390212LIBERTAD SFP060100701I09010IQ0819092016000400000215BURO DE CREDITO0308544948320402UK0502MX060900000000009011IQ08120820160210FINANCIERA0402CC060100701I09010IQ08270720160205BANCO0402CL060100701I09010IQ0827072016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08120720160205BANCO0402CL060100701I09010IQ0812072016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08090620160205BANCO0402UK060100701I09010IQ08120220160205BANCO0402CC060100701I09010IQ0812022016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08080920150215MICROFINANCIERA0402CS0502MX060450000701I09010IQ0808092015000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08170720150216TIENDA COMERCIAL0402CC0502MX06032000701I09010IQ0817072015000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08010520150216TIENDA COMERCIAL0402CC060100701I09010RS08070920120002000102000202000302000402000502000602090702010802000904001010040005110400051204000613040000140400021502001602071701N1805NNNNN1901N2002MX210900002670722090000164002310000021585+24090000000002509000001021260313227090000000002810000000000+29090000000003009000000000310200320200330200340815112012350827072016360214370827072016380200390800000000400200410800000000SC08BC SCORE000300701040636020221030209040215SC08BC SCORE00030040104000602031660303205040243ES0503948001012430761880102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //5
                    //response ="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000452796               MX1010FF2407253910PN05ROMAS0007ESTRADA0205MELIA0307ROMELIA0408100519480513ROMR490612GH10502SR0802MX090111101S1201F14120990160784831518ROMR490612MCBTSG00170201PA13AV 23 1608 SN0107TIRADOR0207CORDUBA0307CORDUBA0403GTO0505876101001H120814052012PA09AV 14 1570003GTO0207CORDUBA0403GTO050594690120828072011PA04AV 60016AV E LOC87CENTRO0114CORDUBA CENTRO0207CORDUBA0307CORDUBA0403GTO050578500071027171219681001H120830112008PA13AV 14 NO 134A0006MEXICO0207CORDUBA0403GTO050594500071027112950981001H120830062008PE08JUBILADO0000TL08091120160210CORDILLERA030100501I0601I0702PL0802MX1002241101M12035871308230520161408031120161508230520161708031120161801A2104594522054898+23010240102602012708111111X1280803102016290803032016TL08071120160205BANCO030100501I0601I0702PL0802MX1002101101K120430811308040820161408271020161508040820161708311020161801A210525196220611381+240102602012703111280803092016290803072016TL08311020160215GUBERNAMENTALES030110501I0601O0702CF0802MX100101101B120332213080101200815080101200817083110201621033222204322+2301024033222602033603483370831102013380203TL08300920160214COMUNICACIONES030110501I0601O0702CL0802MX100111101M120101308050620081408060120161508311220151708300920162104149922020+230102401026020127231111111124321111111111128083008201629083010201436041499370830112015380204TL08090920160205BANCO030100501I0601I0702PL0802MX1002101101K120101308220320161408020820161508220320161608090820161708310820161801A21051500622020+2401026020127061111102808310720162908140220163002CC36010370831032016380200TL08310320160205BANCO030100501I0601I0702PL0802MX1002101101K120101308091120151408220320161508091120151608280320161708280320161801A21052500422020+24010260201270411112808030220162908031120153002CCTL08021220150205BANCO030100501I0601I0702PL0802MX100161101M120101308150520151408301020151508150520151608021120151708301120151801A21051000422020+2401025011260201271021111111102808301020152908300120153002CC36042174370831102015380202TL08171120150205BANCO030100501I0601I0702PL0802MX1002101101K120101308260620151408091120151508260620151608161120151708161120151801A21051800122020+24010260201271021111111102808051020152908050120153002CC36042226370831102015380202TL08300620150205BANCO030100501I0601I0702PL0802MX1002101101K120101308060220151408260620151508060220151608290620151708290620151801A21051519422020+24010260201270421112808180520152908180220153002CC36041879370831052015380202TL08060220150205BANCO030100501I0601I0702PL0802MX1002101101K120101308170920141408040220151508170920141608050220151708050220151801A21051000322020+240102602012705111102808220120152908300920143002CC36010370830092014380200TL08031020140205BANCO030100501I0601I0702PL0802MX1002101101K120101308300420141408170920141508300420141608180920141708300920141801A2104600322020+240102602012705111102808040820142908040420143002CC36010370830042014380200TL08160420140205BANCO030100501I0601I0702PL0802MX1002161101W120101308250320141408250320141508250320141608280320141708310320141801A2104350622020+240102602013002CCTL08080420130205BANCO030100501I0601I0702PL0802MX1002161101W120101308101220121408010420131508101220121608020420131708040420131801A21051005822020+24010260201270411112808040320132908041220123002CCTL08100120130205BANCO030100501I0601I0702PL0802MX1002161101W120101308200820121408101220121508200820121608111220121708311220121801A2104500822020+2401026020127031112808301120122908010920123002CCTL08070920120205BANCO030100501I0601I0702PL0802MX1002161101W120101308070820121408070820121508070820121608140820121708310820121801A2104506222020+240102602013002CCTL08030820120205BANCO030100501I0601I0702PL0802MX1002161101W120101308100420121408010820121508100420121608020820121708020820121801A2104300522020+24010260201270411112808020720122908020420123002CCIQ0824112016000400000215BURO DE CREDITO0308544948320402UK0502MX06090000000000801Y09011IQ08241120160110FF240725390212LIBERTAD SFP060100701I09010IQ08210520160210FINANCIERA0402PL0502MX060459450701I09010RS08140220050002000102000202000302000402010502000602150702000802000904001610040014110400021204001213040001140400041502001602011701N1805NNNNN1901N2002MX210900000182122090000000002310000000322+24090000003222509000000322260300027090000311412810000016279+29090000000003009000003668310200320200330200340801012008350823052016360202370824112016380200390800000000400200410800000000SC08BC SCORE000300701040677020216030218SC08BC SCORE0003004010400050202710303200040243ES0504416001012782682920102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //7
                    //response ="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000412504               MX1010FF2407253910PN06ROMERO0007ROSALES0207CLAUDIA0307ARACELI0408250719720513RORC720725JA60802MX090111101S1201F1518RORC720725MTSXBL16170201PA25CTO DEL FUENTE REAL NO 680108SANTA FE0303GRO0403GRO050576147071144202489770120830102015PA30CLLE CTO DEL FUENTE REAL PA 690010RES STA FE0211CORREGIDORA0403GRO050576913060830122014071044224897701001H120830042015PA17LEONA VIZARRO 2090106OBRERA0307TAMPICO0403TAM050589050070721503791001H120806062001PE13OFICINA PEMEX0034PROLONGRACION CORREGIDORA NTE 10800209ARBOLADAS0303GRO0503GRO060576220071014422160001010SECRETARIA1108270820141202MX1305150001401M170827092015PE16ARCO IRIS MAGICO00000710833214343608031011015ENTRETENIMIENTO110822041998TL08021020160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120418521308060620011408130920161508160720161708210920161801A21052985322059945+23052900024010260201272311111111111111111111111280814082016290814102014TL08230920160205BANCO030100501I0601I0702PN0802MX1002191101S120427321308040120161408200920161508040120161708200920161801A21062020002207185348+240102602012710111111X11028082008201629082011201536010370831012016380200TL08200920160214COMUNICACIONES030100501I0601O0702CL0802MX1101M12032481308290420151408160920161508110820161708160920161801A210346322020+23010240102602012719111111X111X111122112808160820162908160220153603248370830062015380202TL08150920160205BANCO030100501I0601R0702CC0802MX1101Z120101308050120161408130920161508080920161708130920161801A2104904822055814+2305456002401026020127081111111028081308201629081301201636010370831012016380200TL08120920160205BANCO030100501I0601R0702CC0802MX1101Z120101308290520161408060920161508290520161708060920161801A2104209922020+23053200024010250112602012702212808310820162908310720163603500370831082016380202TL08060920160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120101308270920151408050920161708050920161801A22020+2305130002401026020127111111111100028080508201629080510201536010370805102015380200TL08120920160216TIENDA COMERCIAL030100501I0601R0702CC0802MX1101Z120101308221020131408070820161508050720161708310820161801A21051015522020+230531000240102602012724111111111111111X11111111280811072016290811052013TL08010920160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120435481308061120151408190820161508140820161708290820161801A210523979220618583+230532000240102602012709111111111280820072016290820112015TL08041220150214COMUNICACIONES030100501I0601O0702CL0802MX1101Z120101308030320151408280420151508091120151608301120151708301120151801A210324822020+2303200240102602012708111111112808301020152908300320153002CCTL08090120150216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120101308060620011408181020141508111020141608211020141708311220141801A21052985322020+2301124010250142602012724XX111111111111111111111128083011201429083112201036045160370831122011TL08030120110205BANCO030100501I0601R0702CC0802MX1101Z120101308010320031408301220101508170220091608301220101708301220101801A190823072003210611279422020+230580000240102502222602013002CL3103063320203IQ08041020160110FF240725390212LIBERTAD SFP060100701I09010IQ0804102016000400000215BURO DE CREDITO0308544948320402UK0502MX060900000000009011IQ08290520160205BANCO0402CC060100701I09010IQ08301220150205BANCO0402UK060100701I09010IQ08301020150216TIENDA COMERCIAL0402CC060100701I09010IQ08071020150210FINANCIERA0402CC060100701I09010IQ08270920150216TIENDA COMERCIAL0402CC060100701I09010IQ0827092015000400000215BURO DE CREDITO0402CC0502MX060900000000009011RS08060620010002000102000202000302000402000502000602110702000802000904001110040001110400101204000313040000140400021502001602021701N1805NNNNN1901N2002MX210900007559722090001826002310000034342+24090000000002509000005648260301927090002020002810000185348+29090000000003009000002732310200320200330200340806062001350829052016360207370829052016380200390800000000400200410800000000SC08BC SCORE000300701040665020217030216040228SC08BC SCORE00030040104000702032000303166040243ES0503959001012498634300102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //8
                    //response ="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000405977               MX1010FF2407253910PN06COLERA0006ALTANA0206MARTHA0307BEATRIZ0408110719850513COAM8507116Y90602SR0802MX090111101S1201F1518COAM850711TGTMGR06PA10PRESIL 1100103TAM0309SALAMANCA0403GTO050536559060816022009071046464731721001H120831122009PA102 SUR 59110111BIENVENIDOS0303PUE0403PUE050572580071046464731721001H120831082006PE15UNIVER SA DE CV00001003SUP110801022014170822022016PE104777831189000007104646470387170807092006TL08230920160214COMUNICACIONES030100501I0601R0702CL0802MX1101Z120101308110420121408150920161508100920161708190920161801A2104156822020+230369924010260201272411111111111111111111111128081908201629081904201236010370830042012380200TL08060920160216TIENDA COMERCIAL030100501I0601R0702CC0802MX1101Z1308110820061408180120111508231220091708310820161801A1908100720072104132022020+2304160024010250122602UR2724UUUUUUUUUUUUUUUUUUUUUUUU2808310720162908311020103103002320202TL08080920160205BANCO030100501I0601I0702PN0802MX1002951101S120411351308220220161408160820161508220220161708310820161801A210560500220657390+24010260201270611111028083107201629082902201636010370829022016380200TL08270420160205BANCO030100501I0601I0702PN0802MX10031201101M120101308230420131408150120161508150920151608290220161708290120161801A21054110022020+2305411002401026020127241121121112211212211111112808291220152908291120133002CC3603901370831072015380202TL08060120140205BANCO030100501I0601I0702PN0802N\$10031201101M120101308230420131408151120131608291120131708291120131801A21054110022020+2305411002401025011260201270712111112808311020132908300420133002CA3603718370830092013380202TL08240520130205BANCO030100501I0601I0702PL0802N\$1002901101M120101308130420111408150220131608290320131708280220131801A21053190022020+2305319002401025011260201272211111111111211111111112808310120132908290420113002CC3603711370829022012380202TL08040920120214COMUNICACIONES030100501I0601O0702CL0802N\$1101Z120101308230820101408110820121508050820121608310820121708310820121801A2104153522020+24010260201272222112113222222321111112808310720122908311020103002CC36041156370831122011IQ08260920160110FF240725390212LIBERTAD SFP060100701I09010IQ0826092016000400000215BURO DE CREDITO0308544948320402UK0502MX060900000000009011IQ08110820160110FF240725390212LIBERTAD SFP060100701I09010IQ0811082016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08220220160205BANCO0402UK060100701I09010IQ08050920150205BANCO0402CC060100701I09010RS08070920060002000102000202000302000402000502000602060702000802010904000710040004110400031204000413040000140400041502001602031701N1805NNNNN1901N2002MX210900000288822090000022992310000000000+24090000000002509000000000260300027090000605002810000057390+29090000000003009000001135310200320200330200340811082006350822022016360205370826092016380200390800000000400200410800000000SC08BC SCORE000300701040703020231030204SC08BC SCORE00030040104000902024403032100403205ES0502887001012467842520102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //9
                    //response ="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL110000380575               MX1000FF2407253910PN08SANOFREL0007ESTRADA0211MELQUIAEDES0408311119760513SESM761131AR80802MX090111101S1201M1518SESM761131HQTVHL07PA38AV JUAN PABLO PINO SUAREZ MELCHOR O 61016CENTRO HISTORICO0203GRO0303GRO0403GRO050573000071044228219241001H120830092005PE24TRABAJADOR INDEPENDIENTE0028JUAN PABLO PINO SUAREZ NO 614206CENTRO0403QRO0503QRO060576000070721210241808150620121901APE28MELQUISEDEC SANOFREL ESTRADA000007104422121024TL08220820160214COMUNICACIONES030100501I0601O0702CL0802MX1101M12034201308090520141408190820161508160720161708190820161801A21037592204410+23052000024010260201272411X1111111111112111111112808190720162908190420143603410370831052015380202TL08150820160205BANCO030100501I0601R0702CC0802MX1101Z12035161308301020071408090820161508100820161708140820161801A210527840220626660+2305280002401026020127211111111111111111X1111280814072016290814112014TL08030820160205BANCO030100501I0601R0702PN0802MX10039001101Z120101308150620121708310720161801A21051500022020+2305150002401026020127241111111111111111111111XX280830062016290830062012TL08050820160214COMUNICACIONES030100501I0601O0702CL0802MX1101M120425581308190620071408110720161508060720161708310720161801A1908010420082104255822052558+2305200002401026020127241111111111111111111111112808150620162908301120103603362370831082013TL08070320150205BANCO030100501I0601R0702CC0802N\$1101Z120101308301020071408270120151508060220151608170220151708270220151801A19083110200721051396422020+230112401026020127241111111111111111111111112808010120152908300920103002CCIQ08230820160110FF240725390212LIBERTAD SFP060100701I09010IQ08140620120205BANCO0402UK060100701I09010IQ08220920080205BANCO0402UK060100701I09010IQ08171020070205BANCO0402CC060100701I09010RS08100720070002000102000202000302000402000502000602050702000802000904000510040000110400051204000113040000140400011502001602001701N1805NNNNN1901N2002MX210900004615722090000430002310000029628+24090000000002509000003494260303627090000000002810000000000+29090000000003009000000000310200320200330200340819062007350809052014360203370814062012380200390800000000400200410800000000SC08BC SCORE000300701040687020215030228040204SC08BC SCORE0003004010400080203166030225040254ES0502212001012308496990102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //10
                    //response ="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpresoeporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //temporal
                    if(datosBancarios.cadenaDeBuro != null && datosBancarios.cadenaDeBuro != "undefined" && datosBancarios.cadenaDeBuro != "null") {
                       response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>" + URLDecoder.decode(datosBancarios.cadenaDeBuro, "UTF-8") + "</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    } else {
                        //response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpresoeporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                        response = '<?xml version=\'1.0\' encoding=\'UTF-8\'?><soapenv:Envelope xmlns:soapenv=\'http://schemas.xmlsoap.org/soap/envelope/\'><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\'http://bean.consulta.ws.bc.com/\'><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpresoeporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>'
                    }
                    //temporal

                    //DATO OSCAR PROD  507
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL111234567890     1234567890MX1010KK7687100110PN08CASTILLO0006NESTOR0205OSCAR0307EDUARDO0408060219860513CANO860206CB80602SR0802MX090131101S1201M1518CANO860206HDFSSS00PA27SN ANTONIO MARIA ZACARIA 760116RANCHO SAN DIMAS0216SN ANTONIO LA IA0402EM05055228207107224321587120818042016PA11CEREZOS 9430011CASA BLANCA0207METEPEC0307METEPEC0402EM050552150120828022014PA29SN ANTONIO MARIA ZACARIA MZ340013RCHO SN DIMAS0216SN ANTONIO LA IA0402EM050552282120831122013PA17PROL 16 DE SEP 680024LOC SN LUCAS TEPEMAJALCO0128PUEBLO SAN LUCAS TEPEMAJALCO0216SN ANTONIO LA IA0402EM050552280060811112000071071713203281001H120829042005PE30SISTEMA ESTATAL DE INFORMATICA0000071172201320328170824052009PE17NUUPTECH SA DE CV0000TL08081120160216TIENDA COMERCIAL030100501I0601R0702CL0802MX1101Z120101308280520091408031120161508091020161708041120161801A2104766422020+2304800024010260201272411UU11121111112121211121280804102016290804122010370830042014TL08091120160205BANCO030100501I0601R0702CC0802MX1101Z120191308011020111408031120161508201020161708031120161801A210474392204192+230434002401026020127241111111111111111111111212808311020162908201020113603350370805042014380202TL08101120160214COMUNICACIONES030100501I0601R0702CL0802MX1101Z12037491308270520151408040620151508020420161708311020161801A21037492204749+230410002403749250112602962717977777765432211112808300920162908300520153603749370830092015380202TL08071120160214COMUNICACIONES030100501I0601O0702CL0802MX1101M120101308140420121408191020161508151020161708311020161801A2104106822020+23012240102602012724111111111111111111211111280821092016290821032012370830042014380202TL08190820150210AUTOMOTRIZ030100501I0601I0702AU0802MX1002481101M120101308160720131408100820151508160720131608100820151708160820151801A210620188022020+23062018802401025011260201272411111113211111143211111128081607201529081607201336046253370830042014380204TL08060920140205BANCO030100501I0601R0702CC0802MX1101Z120101308310520101408180820141508290120141608180820141708310820141801A21056377622020+23057980024054063125015260297271065432111112808310720142908021020133002LC360515363370831072014380206TL08300420140214COMUNICACIONES030110501I0601R0702CL0802MX100101101M120410211308240220141408310320141708300420142104154122051021+2304100024010260201270211280830032014290828022014TL08121120130205BANCO030100501I0601R0702CC0802MX1101Z120101308310520101408031020131508211020131608311020131708311020131801A21054833222020+230579800240102602UR27241111111111111111111111112808300920132908311220103002LSTL08300520130205BANCO030100501I0601R0702CC0802MX1101Z120101308290520061408280220131508240420121608280220131708010320131801C1908310720062104536422020+2304299024043218250162602972724X654321121121111111111112808010220132908311220103002LC370831032013TL08060920120214COMUNICACIONES030100501I0601O0702CL0802MX1101Z120101308300420081408180420121508120720121608310820121708310820121801A210356322020+23011240102602012720111111111111121211112808310720122908311220103002CC370830062011TL08100820120214COMUNICACIONES030100501I0601R0702CL0802MX1101Z120101308240420101408020620121608020620121708310720121801A210366022020+2304100024010260201271911111111111112111112808300620122908311220103002CC3603645370831052011IQ0817112016000400000215BURO DE CREDITO0308544948320402CC0502MX060900000000009011IQ08171120160110KK768710010206KOSMOS0402CC060100701I09010IQ0807112016000400000215BURO DE CREDITO0402CC0502MX060900000000009011IQ08071120160110KK768710010206KOSMOS0402CC060100701I09010IQ08180920160205BANCO0402CC060100701I09010IQ08310820160205BANCO0402CC060100701I09010IQ0818042016000400000203SIC0402CC0502MX060900000000009011IQ08180420160216CONSUMIDOR FINAL0402UK060100701I09010IQ08130420160205BANCO0402CC060100701I09010IQ08221120140205BANCO0402CC060100701I09010RS08070720040002000102000202000302000402000502000602070702000802010904001110040001110400101204000613040003140400061502001602051701N1805NNYNY1901N2002MX210900001846122090000134002310000001962+24090000445982509000001779260301527090000000002810000000000+29090000000003009000000000310201320202330200340829052006350827052015360209370831082016380200390800000000400200410800000000HI081711201600030010116BURO DE CREDITO 0248VER MENSAJES DE COINCIDENCIA POR REP. DE CREDITOHR081711201600038600116BURO DE CREDITO 0244TELEFONO 717132328 CORRESPONDE A NUMERO FIJOHR081711201600038500116BURO DE CREDITO 0248TELEFONO 7224321587 NO CORRESPONDE A ZONA POSTALHR081711201600038900116BURO DE CREDITO 0243COLONIA NO COINCIDE CON CODIGO POSTAL 52280HR081711201600038700116BURO DE CREDITO 0246TELEFONO 7224321587 CORRESPONDE A NUMERO MOVILSC08BC SCORE000300701040587020221030231ES0504610001012746834250102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"  
                    //desa
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>INTL111234567890     1234567890MX0000ZM7687100110PN06GARCIA0008MARTINEZ0204ROSA0305MARIA0408010119550513GAMR550127HW40802MX090111101M1201FPA16AV REF 450 DEPTO0109PETROLERA0220POZA RICA DE HIDALGO0309POZA RICA0403VER05059329007078210260120830092003PA11MORELIA 2160018CIRCULO MICHOACANO0220POZA RICA DE HIDALGO0403VER050593210060805062000070782475721001H120815012003PA11MORELIA 2160309POZA RICA0403VER05059330507078247572120816122001PA15CALLE REF NO 380109PETROLERA0309POZA RICA0403VER050593290070700102601001H120824101996PE23UNIVERSIDAD VERACRUZANA0000071178278247572110801010001170818072004PE15NOPROPORCIONADO0000TL08060420050216TIENDA COMERCIAL0501I0601R0702CL0802N\$1101Z120410081308180720041408050220051508081220041708310320051801A1908010820042104707922055880+23048000240346826020227091X1111000280828022005290828062004TL08090420050205BANCO0501I0601R0702CC0802N\$1101Z12034831308060420041408150320051508061120041708310320051801A190830042004210510814220610734+230511000260201271111111111111280828022005290828042004TL08090420050205BANCO0501C0601I0702PL0802N\$1002231101M12037881308050320041408010420051708310320051801A210530000220616626+2602012712111111111111280828022005290828032004TL08090420050216TIENDA COMERCIAL0501I0601R0702CC0802N\$1101Z1202301308250920031408160320051508151120041708310320051801A210417942204179+2304300025013260201271843212121432132200028082802200529082809200331030113202063302033402023603611370828022005380204TL08120420050209SERVICIOS0501I0601O0702MI0802N\$1101M120101308020619971408010120001608280720001708310320051801A1908310320052104137022020+24010260201272211111111111111111111112808280220052908280520033002CCTL08090420050205BANCO0501I0601R0702CC0802N\$1101Z12032001308200120031408310320051508280320051708310320051801A19083101200321046685220365+230477002602012724111111111111111111111111280828022005290828012003TL08070420050216TIENDA COMERCIAL0501I0601R0702CL0802N\$1101Z12032711308010119931408150320051508020220051708310320051801A1908301020032104402622051557+2304150026020127241X11221212154X3X111132132808280220052908280419983002PL36010370828032004380205TL08070220000210FINANCIERA0501I0601I0702CL0802N\$090430051101M120101308090119981408130719981608130719981708310120001801A2104300522020+2401026020127201111111111111XXXX111280831121999290801051998IQ08280920160110ZM768710010206KOSMOS0402CC060100701IIQ08010320050210FINANCIERA0402PL060100701IIQ08180720040216TIENDA COMERCIAL0402CC060100701IIQ08220420040205BANCO0402RE060100701IIQ08270320040216TIENDA COMERCIAL0402CC060100701IIQ08040320040205BANCO0402UK060100701IIQ08120220040205BANCO0402UK060100701IIQ08301220030205BANCO0402CC060100701IIQ08250920030216TIENDA COMERCIAL0402CC060100701IIQ08150120030205BANCO0402UK060100701IRS08261119950002000102000202000302000402000502010602070702000802000904000810040002110400061204000213040001140400021502001602001701N1805NNYNY1901N2002MX210530398220531200230618415+240346825041992260259270530000280616626+290103003788310200320200330200340801011993350818072004360209370801032005380200390800000000400200410800000000HI081404201500039900116INF DE JUICIOS  024724-OME-ACD(15-04)-000698/2015-JAL-GDL MERC 2 S2HI082409200900039900116INF DE JUICIOS  024704-ORC-ACD(09-10)-001399/2009-DF-CIV 10 SEC 1  HI082809201600039900116INF DE JUICIOS  024704-USU-ACD(10-07)-000239/2009-EM-NEZA. CIV 2 S1HR082007201100039900116INF DE JUICIOS  024718-EJM-ACD(11-12)-001177/2009-GTO-CELAYA M C6 SHR081004201500039900116INF DE JUICIOS  024724-ORM-APS(15-04)-000088/2015-QR-CANCUN MERC1S2HR080206201100039900116INF DE JUICIOS  024718-EJM-ACD(11-07)-000223/2011-EM-NAU.MC 2 S1   HR082809201600039900116INF DE JUICIOS  024704-EJM-ACD(10-10)-000013/2007-SLP-CERRITOS C1 SHR081808200900039900116INF DE JUICIOS  024719-EJM-ACD(09-08)-000332/2009-BCS-LA PAZ M MX1SHR080706201100039900116INF DE JUICIOS  024718-EJM-ACD(09-10)-000898/2009-GTO-CELAYA M C6 SHR082809201600039900116INF DE JUICIOS  024718-EJM-ACD(09-11)-001177/2009-GTO-CELAYA M C6 SHR082810201100039900116INF DE JUICIOS  024712-ORC-ACD(12-01)-001339/2011-NL-CADEREYTA MX1SHR082809201600039900116INF DE JUICIOS  024704-SUH-ACD(08-02)-000636/2007-BCN-MEXICALI C4 SHR080407201100039900116INF DE JUICIOS  024704-CIV-ACD(11-10)-000721/2011-DF-CIV 83 SEC 1  HR082809201600039900116INF DE JUICIOS  024718-EJM-ACD(11-06)-001473/2008-GTO-CELAYA MN C2SHR082809201600039900116INF DE JUICIOS  024712-ORC-ACD(10-05)-000101/2010-NL-CADEREYTA MX1SHR082809201600039900116INF DE JUICIOS  024704-ESH-ACD(12-01)-001614/2010-DF-CIV 21 SEC 2  HR082809201600039900116INF DE JUICIOS  024704-ORC-ACD(09-09)-000623/2008-GTO-ACAMBARO C3 SSC08BC SCORE00030010104-008ES0504604001010003241250102**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"

                }else{
                    //Response FAIL
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>ERRRUR25                         1101YES05000530002**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    //response="<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>ERRRUR251234567890     &&&45678900506PA05050609PA0403ASDES05000710002**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                    response = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:consultaXMLResponse xmlns:ns2=\"http://bean.consulta.ws.bc.com/\"><return><Personas><Persona><Cuentas><Cuenta/></Cuentas><ConsultasEfectuadas><ConsultaEfectuada/></ConsultasEfectuadas><ReporteImpreso>ERRRAR25LIB-0000000000000000002820014NO AUTENTICADOES05000660002**</ReporteImpreso></Persona></Personas></return></ns2:consultaXMLResponse></soapenv:Body></soapenv:Envelope>"
                }
            }else{
                //Response PROD
                //response = post(soap.toString(),configuracion.urlBuroCredito)
                response = post(soap_request,configuracion.urlBuroCredito)
            }
            response = corregirCaracteres(response)
            addBitacoraBuroCredito(soap.toString(), response, solicitud, Constants.TipoConsulta.AUTENTICADOR, usuario)

            println "REPORTE A ANALIZAR..."+response
            return analizarReporte(response,solicitud,configuracion.reintentos,referenciaOperador)
        }catch(Exception e){
            respuesta.error = 500
            respuesta.errorDesc = "No se pudo obtener el reporte de buró de crédito en el primer intento. En breve recibirás ayuda."
            log.error("Error consulta BC WS. Solicitud: " + solicitud.id, e)
            return respuesta
        }
    }
    
    def consultaINTL(data, def datosPersonales, def direccion, SolicitudDeCredito solicitud, Long idEntidadFinanciera, Usuario usuario){
        def respuesta = [:]

        def criteria = ConfiguracionBuroCredito.createCriteria()
        ConfiguracionBuroCredito configuracion = criteria.get {
            createAlias('configuracionEntidadFinanciera', 'ef')
            eq ('ef.id', idEntidadFinanciera)
            eq ('tipoConsulta', Constants.TipoConsulta.TRADICIONAL)
        }

        if(configuracion == null){
            respuesta.error = Boolean.TRUE
            respuesta.errorDesc = "BCS02. Error interno. Contacte al administrador del sistema"
            log.error("Error. No se ha configurado la conexión de la entidad financiera para la consulta a BC")
            return respuesta
        }

        if (solicitud.reporteBuroCredito != null) {
            if(solicitud.reporteBuroCredito.errorConsulta == null){
                def bitacoraBC = this.getRequestBC(solicitud)
                //Valida que no se haya ejecutado una consulta previa con AUTENTICADOR que haya sido exitosa
                if (bitacoraBC && bitacoraBC.tipoConsulta == Constants.TipoConsulta.AUTENTICADOR) {
                    respuesta.error = 500
                    respuesta.errorDesc = "La consulta con autenticador ya ha sido ejecutada exitosamente"
                } else {
                    //Si existe una consulta TRADICIONAL previa devuelve el numero de folio generado
                    respuesta.folio = this.getFolioConsultaTradicional(solicitud.reporteBuroCredito)
                    respuesta.status = 200
                }

                return respuesta
            } else if(!solicitud.reporteBuroCredito.errorConsulta.contains("ERRR")){
                //Valida si hubo una consulta previa que haya generado un error fatal
                respuesta.error = 500
                respuesta.errorDesc = "No se pudo obtener el reporte de buró de crédito"
                log.error("No se pudo obtener el reporte de buró de crédito. Solicitud: " + solicitud.id)
                return respuesta
            }
        }

        // Numero de referencia del operador. Si se envía otro dato diferente de 25 espacios no se realizará la petición
        String referenciaOperador = "                         "
	String intl = this.buildINTLRequest(datosPersonales, direccion, solicitud, configuracion, referenciaOperador)

        try {
            String intlResponse = conexionBCService.socketRequest(configuracion.ipBuroCredito, configuracion.portBuroCredito, intl, data)
            intlResponse = corregirCaracteres(intlResponse)
            addBitacoraBuroCredito(intl, intlResponse, solicitud, Constants.TipoConsulta.TRADICIONAL, usuario)

            return analizarReporteINTL(intlResponse, solicitud, configuracion.reintentos, referenciaOperador)
        } catch(Exception e) {
            respuesta.error = 500
            respuesta.errorDesc = "No fue posible obtener el reporte de buró de crédito"
            log.error("Error consulta BC INTL. Solicitud: " + solicitud.id, e)
            return respuesta
        }
    }

    private void addBitacoraBuroCredito(String request, String response, SolicitudDeCredito solicitud, Constants.TipoConsulta tipoConsulta, Usuario usuario) throws BusinessException {
        BitacoraBuroCredito bitacora = new BitacoraBuroCredito()
        bitacora.peticion = request
        bitacora.respuesta = response
        bitacora.fechaRespuesta = new GregorianCalendar().getTime()
        bitacora.solicitud = solicitud
        bitacora.tipoConsulta = tipoConsulta

        if(bitacora.save(flush:Boolean.TRUE)) {
            if(usuario != null){
                Usuario u = Usuario.get(usuario.id)

                def bitacoraUsuario = BitacoraUsuarioConsultabc.create(bitacora, u)
                if(bitacoraUsuario.usuario == null) {
                    throw new BusinessException("Ocurrió un error al guardar la bitacora del usuario")
                }
            }
        } else {
            if (bitacora.hasErrors()) {
                bitacora.errors.allErrors.each {
                    log.error("DESC" + solicitud.id + ". " + it)
                }
            }
            throw new BusinessException("ERR" + solicitud.id + ". Ocurrió un error al guardar la bitacora de la consulta")
        }
    }

    def analizarReporte(String xml,SolicitudDeCredito solicitud,int reintentos,String referenciaOperador) {
        def respuesta = [:]
        Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(xml)));
        NodeList reporteImpreso = doc.getElementsByTagName("ReporteImpreso");
        if(solicitud.reporteBuroCredito != null){
            ReporteBuroCredito reporteDel = solicitud.reporteBuroCredito;
            def segmentosErrores = ReporteBuroSegmentoError.findAllByReporteBuroCredito(reporteDel)
            segmentosErrores.each{ ReporteBuroSegmentoError segmentoError ->
                segmentoError.delete(flush:true)
            }
            solicitud.reporteBuroCredito=null
            solicitud.save(flush:true)
            reporteDel.delete(flush:true)
        }
		
        if (reporteImpreso.getLength() > 0) {
            Element  reporte = (Element)reporteImpreso.item(0);
            ReporteBuroCredito reporteBuroCredito = obtenerDatosPersonales(reporte.getTextContent())
            reporteBuroCredito.referenciaOperadorAR = referenciaOperador
            reporteBuroCredito.referenciaOperadorUR = referenciaOperador
            def segmentos = ReporteBuroSegmentoError.findAllByReporteBuroCredito(reporteBuroCredito)
			
            if(reporteBuroCredito != null && reporteBuroCredito.errorConsulta == null){
                respuesta.status = 200
                solicitud.reporteBuroCredito = reporteBuroCredito
                solicitud.save(flush:true)
                //respuesta.score   = obtenerScore(reporte.getTextContent())
            }else{
                respuesta.error = 500
                respuesta.errorDesc = "Error al procesar la información de la consulta"
                if(reporteBuroCredito != null){
                    solicitud.reporteBuroCredito = reporteBuroCredito
                    solicitud.save(flush:true)
                }else{
                    ReporteBuroCredito reporteBuro = new ReporteBuroCredito()
                    reporteBuro.errorConsulta="ERRR error al consumir WS"
                    reporteBuro.save(flush:true)
                    solicitud.reporteBuroCredito = reporteBuro
                    solicitud.save(flush:true)
                }
                //SE PUEDE DETECTAR EL SEGMENTO DE ERROR
                if(segmentos != null){
                    Integer peticiones = BitacoraBuroCredito.countBySolicitud(solicitud)
                    if( peticiones <= reintentos ) {
                        if(segmentos && (segmentos?.size() > 0)) {
                            respuesta.problemasBuro  = []
                            segmentos.each { segmento ->
                                def mapa = [:]
                                mapa.segmento = segmento.segmentoError.descripcion
                                mapa.pasoError = [:]
                                mapa.pasoError.numeroDePaso = segmento.segmentoError.pasoSolicitud?.numeroDePaso
                                mapa.pasoError.tituloPaso = segmento.segmentoError.pasoSolicitud?.titulo
                                respuesta.problemasBuro << mapa
                            }
                        }
                    } else if (peticiones > reintentos ){
                       respuesta.errorDesc = "Se han superado los reintentos disponibles"
                        
                    }
                }
                //NO SE PUDO AUTENTICAR AL USUARIO.
                if(reporteBuroCredito.tipoErrorBuroCredito.tipo == "AR" && reporteBuroCredito.tipoErrorBuroCredito.numeroCampo == "00"){
                    respuesta.problemasBuro = null
                    respuesta.remove("problemasBuro")
                    respuesta.segmento = "AUTENTICADOR"
                }
            }
        } else {
            respuesta.error = 500
            respuesta.errorDesc = "ERRR error al consumir WS"
            if(solicitud.reporteBuroCredito != null){
                solicitud.reporteBuroCredito.errorConsulta=respuesta.errorDesc
                solicitud.reporteBuroCredito.save(flush:true)
            }else{
                ReporteBuroCredito reporteBuro = new ReporteBuroCredito()
                reporteBuro.referenciaOperadorAR = referenciaOperador
                reporteBuro.referenciaOperadorUR = referenciaOperador
                reporteBuro.errorConsulta=respuesta.errorDesc
                reporteBuro.save(flush:true)
                solicitud.reporteBuroCredito = reporteBuro
                solicitud.save(flush:true)
            }
        }
        println "RESPONSE BURO DE CREDITO::"+ respuesta
        return respuesta
    }
    
    def analizarReporteINTL(String intlResponse, SolicitudDeCredito solicitud, Integer reintentos, String referenciaOperador) {
        def respuesta = [:]
        if(solicitud.reporteBuroCredito != null){
            ReporteBuroCredito reporteDel = solicitud.reporteBuroCredito
            def segmentosErrores = ReporteBuroSegmentoError.findAllByReporteBuroCredito(reporteDel)
            segmentosErrores.each { ReporteBuroSegmentoError segmentoError ->
                segmentoError.delete(flush:Boolean.TRUE)
            }
            solicitud.reporteBuroCredito = null
            solicitud.save(flush:Boolean.TRUE)
            reporteDel.delete(flush:Boolean.TRUE)
        }

        ReporteBuroCredito reporteBuroCredito = obtenerDatosPersonales(intlResponse)
        reporteBuroCredito.referenciaOperadorAR = referenciaOperador
        reporteBuroCredito.referenciaOperadorUR = referenciaOperador

        if(reporteBuroCredito != null && reporteBuroCredito.errorConsulta == null){
            solicitud.reporteBuroCredito = reporteBuroCredito
            solicitud.save(flush:Boolean.TRUE)
            
            respuesta.folio = getFolioConsultaTradicional(reporteBuroCredito)
            respuesta.status = 200
        } else {
            respuesta.error = 500
            respuesta.errorDesc = "Error al procesar la información"
            log.error("Error al procesar la información. Solicitud: " + solicitud.id)

            if(reporteBuroCredito != null){
                solicitud.reporteBuroCredito = reporteBuroCredito
                solicitud.save(flush:Boolean.TRUE)
            } else {
                ReporteBuroCredito reporteBuro = new ReporteBuroCredito()
                reporteBuro.errorConsulta = "ERRR error al consumir el servicio"
                reporteBuro.save(flush:Boolean.TRUE)
                solicitud.reporteBuroCredito = reporteBuro
                solicitud.save(flush:Boolean.TRUE)
            }

            //SE PUEDE DETECTAR EL SEGMENTO DE ERROR
            def segmentos = ReporteBuroSegmentoError.findAllByReporteBuroCredito(reporteBuroCredito)

            if(segmentos != null) {
                Integer peticiones = BitacoraBuroCredito.countBySolicitudAndTipoConsulta(solicitud, Constants.TipoConsulta.TRADICIONAL)
                if(peticiones <= reintentos) {
                    if(segmentos && (segmentos?.size() > 0)) {
                        respuesta.problemasBuro  = []
                        segmentos.each { segmento ->
                            def mapa = [:]
                            mapa.segmento = segmento.segmentoError.descripcion
                            mapa.pasoError = [:]
                            mapa.pasoError.numeroDePaso = segmento.segmentoError.pasoSolicitud?.numeroDePaso
                            mapa.pasoError.tituloPaso = segmento.segmentoError.pasoSolicitud?.titulo
                            respuesta.problemasBuro << mapa
                        }
                    }
                } else if (peticiones > reintentos ){
                       respuesta.errorDesc = "Se han superado los reintentos disponibles"
                        
                }
            }
        }
        return respuesta
    }
	
    def obtenerScore(String reporte){
        int indice = reporte.indexOf("SCORE")
        def score = reporte.substring(indice+5,indice+8)
        return score
    }
	
	
    def obtenerTipoError(ReporteBuroCredito reporte, String error){
		
        //Ejemplo ERRRUR251234567890     12345678900506PA05050609PA0403ASDES05000710002**
        //Ejemplo ERRRAR25GAMR550127HW4            0014NO AUTENTICADOES05000660002** 
        error = error.replace("ERRR","")
        int indiceInicial = 0 
        String etiqueta=error.substring(0,2)
        if(etiqueta.equals("UR") || etiqueta.equals("AR")){
            int saltoNumeroCampo = 2
            String numeroCampo = new String("")
            String valorCampo = new String("")
            ReporteBuroSegmentoError reporteSegmentoError = null
            while(indiceInicial <= error.length() && etiqueta != "ES" && (indiceInicial + saltoNumeroCampo) < error.length()){
                int longitud = Integer.parseInt(error.substring(indiceInicial + saltoNumeroCampo,indiceInicial+saltoNumeroCampo + saltoNumeroCampo))
                numeroCampo = error.substring(indiceInicial ,indiceInicial + saltoNumeroCampo)
                if(numeroCampo.equalsIgnoreCase("ES")){
                    etiqueta = numeroCampo
                }
                valorCampo = error.substring(indiceInicial + saltoNumeroCampo + saltoNumeroCampo ,indiceInicial + saltoNumeroCampo + saltoNumeroCampo+  longitud ) +" "	
                if(numeroCampo.equals("00")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"00") }
                if(numeroCampo.equals("01")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"01") }
                if(numeroCampo.equals("02")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"02") }
                if(numeroCampo.equals("03")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"03") }
                if(numeroCampo.equals("04")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"04") }
                if(numeroCampo.equals("05")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"05") }
                if(numeroCampo.equals("06")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"06") }
                if(numeroCampo.equals("07")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"07") }
                if(numeroCampo.equals("11")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"11") }
                if(numeroCampo.equals("12")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"12") }
                if(numeroCampo.equals("13")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"13") }
                if(numeroCampo.equals("14")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"14") }
                if(numeroCampo.equals("16")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"16") }
                if(numeroCampo.equals("18")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"18") }
                if(numeroCampo.equals("20")){reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo(etiqueta,"20") }
                if(valorCampo.contains("PA") || valorCampo.contains("PN") || valorCampo.contains("PE") || valorCampo.contains("PI") || valorCampo.contains("AU")){
                    def segmentoErrror = SegmentoError.findBySegmentoBuroCreditoAndCampoBuroCredito(valorCampo.substring(0,2),valorCampo.substring(2,4))
                    if(segmentoErrror){
                        reporteSegmentoError = new ReporteBuroSegmentoError()
                        reporteSegmentoError.reporteBuroCredito = reporte
                        reporteSegmentoError.segmentoError = segmentoErrror
                        reporteSegmentoError.save(flush:true)
                    }
                }
                reporte.save(flush:true)
                indiceInicial = indiceInicial + longitud + saltoNumeroCampo  + saltoNumeroCampo
            }
        }else{
            reporte.tipoErrorBuroCredito = TipoErrorBuroCredito.findByTipoAndNumeroCampo("DESCONOCIDO","-")
            reporte.save(flush:true)
        }
    }
	
    def obtenerDatosPersonales(String reporte){
        /*
         * PN Nombre del Cliente
         * PA Direccion del Cliente
         * PE Empleo del Cliente.
         * PI Informacion de Cuentas o Creditos.	
         * CL Criterios Adicionales
         * TL Cuentas o Creditos.
         * IQ Consultas realizadas al expediente
         * RS Resumen de Expediente
         * HI Coincidencias con los datos de la Consulta
         * HR Coincidencias con los datos en BD Buro de Credito.
         * CR Declarativa del Cliente
         * SC Contiene el BC Score. 
         * ES Fin del Registro
         */
	
        String datosPersonales = null
        String etiqueta = "PN"
        String numeroCampo = "PN"
        ReporteBuroCredito reporteBuro = new ReporteBuroCredito()
        SintetizaBuroCredito sintetiza = new SintetizaBuroCredito()
        RefCredBuroCredito referencia = null
        DireccionBuroDeCredito direccion = null 
        EmpleoBuroDeCredito empleo = null
        CreditoClienteBuroCredito credito = null
        ConsultasBuroCredito consulta = null
        AlertaBuroCredito alerta = null
        AlertaBuroCredito alertaHr = null
        DeclaConsBuroCredito declarativa= new DeclaConsBuroCredito()
        ScoreBuroCredito score = null
        SegFinBuroCredito segfinal = new SegFinBuroCredito()
        ResumenBuroCredito resumen = new ResumenBuroCredito()

        try{
            if (reporte.contains('INTL')){
                int indiceInicial = reporte.indexOf(etiqueta)
                int indiceFinal = reporte.length()
                String subreporte = reporte.substring(indiceInicial,indiceFinal)
                int saltoNumeroCampo = 2
                datosPersonales = ""
                indiceInicial=0
                while(indiceInicial < subreporte.length() && (indiceInicial + saltoNumeroCampo) < subreporte.length()) {
                    numeroCampo = subreporte.substring(indiceInicial ,indiceInicial + saltoNumeroCampo)
					
                    if(numeroCampo.equalsIgnoreCase("PN") || numeroCampo.equalsIgnoreCase("PA") || numeroCampo.equalsIgnoreCase("PE") || numeroCampo.equalsIgnoreCase("PI") || numeroCampo.equalsIgnoreCase("CL")
                        || numeroCampo.equalsIgnoreCase("TL") || numeroCampo.equalsIgnoreCase("IQ") || numeroCampo.equalsIgnoreCase("RS") || numeroCampo.equalsIgnoreCase("HI")
                        || numeroCampo.equalsIgnoreCase("HR") || numeroCampo.equalsIgnoreCase("CR") || numeroCampo.equalsIgnoreCase("SC") || numeroCampo.equalsIgnoreCase("ES")){
                        etiqueta = numeroCampo
                    }
					
					
                    int longitud = Integer.parseInt(subreporte.substring(indiceInicial + saltoNumeroCampo,indiceInicial+saltoNumeroCampo + saltoNumeroCampo))
                    datosPersonales = subreporte.substring(indiceInicial + saltoNumeroCampo + saltoNumeroCampo ,indiceInicial + saltoNumeroCampo + saltoNumeroCampo+  longitud ) +" "

                    switch(etiqueta){
                    case "PN":
                        if(numeroCampo.equals("PN")){
                            reporteBuro.save()
                            reporteBuro.apellidoPaterno = datosPersonales 
                        }
                        if(numeroCampo.equals("00")){reporteBuro.apellidoMaterno = datosPersonales }
                        if(numeroCampo.equals("01")){reporteBuro.apellidoAdicional = datosPersonales }
                        if(numeroCampo.equals("02")){reporteBuro.primerNombre = datosPersonales }
                        if(numeroCampo.equals("03")){reporteBuro.segundoNombre = datosPersonales }
                        if(numeroCampo.equals("04")){reporteBuro.fechaNacimiento = datosPersonales }
                        if(numeroCampo.equals("05")){reporteBuro.rfc = datosPersonales }
                        if(numeroCampo.equals("06")){reporteBuro.prefijoProfesinal = datosPersonales }
                        if(numeroCampo.equals("07")){reporteBuro.sufijoPersonal = datosPersonales }
                        if(numeroCampo.equals("08")){reporteBuro.nacionalidad = datosPersonales }
                        if(numeroCampo.equals("09")){reporteBuro.tipoResidencia = datosPersonales }
                        if(numeroCampo.equals("10")){reporteBuro.numeroLicenciaConducir = datosPersonales }
                        if(numeroCampo.equals("11")){reporteBuro.estadoCivil = datosPersonales }
                        if(numeroCampo.equals("12")){reporteBuro.genero = datosPersonales }
                        if(numeroCampo.equals("13")){reporteBuro.numeroCedulaProfesional = datosPersonales }
                        if(numeroCampo.equals("14")){reporteBuro.numeroIFE = datosPersonales }
                        if(numeroCampo.equals("15")){reporteBuro.curp = datosPersonales }
                        //if(numeroCampo.equals("16")){reporteBuro. = datosPersonales }
                        if(numeroCampo.equals("17")){reporteBuro.numeroDependientes = datosPersonales }
                        if(numeroCampo.equals("18")){reporteBuro.edadDependientes = datosPersonales }
                        break;
                    case "PA":
                        if(numeroCampo.equals("PA")){
                            if(direccion != null){
                                reporteBuro.save(flush:true)
                                direccion.reporteBuroCredito = reporteBuro
                                direccion.save(flush:true)
                                //direcciones.add(direccion)
                            }
                            direccion = new DireccionBuroDeCredito()
                            direccion.direccionPrimeraLinea = datosPersonales
                        }
                        if(numeroCampo.equals("00")){direccion.direccionSegundaLinea = datosPersonales }
                        if(numeroCampo.equals("01")){direccion.colonia = datosPersonales }
                        if(numeroCampo.equals("02")){direccion.municipio = datosPersonales }
                        if(numeroCampo.equals("03")){direccion.ciudad = datosPersonales }
                        if(numeroCampo.equals("04")){direccion.estado = datosPersonales }
                        if(numeroCampo.equals("05")){direccion.codigoPostal = datosPersonales }
                        if(numeroCampo.equals("06")){direccion.fechaResidencia = datosPersonales }
                        if(numeroCampo.equals("07")){direccion.numeroTelefono = datosPersonales }
                        if(numeroCampo.equals("08")){direccion.extensionTelefono = datosPersonales }
                        if(numeroCampo.equals("09")){direccion.numeroFax = datosPersonales }
                        if(numeroCampo.equals("10")){direccion.tipoDomicilio = datosPersonales }
                        if(numeroCampo.equals("11")){direccion.indicadorEspecialDomicilio = datosPersonales }
                        if(numeroCampo.equals("12")){direccion.fechaDeReporteDireccion = datosPersonales }
                        if(numeroCampo.equals("13")){direccion.origenDomicilio = datosPersonales }
                        break;
                    case "PE":
                        if(numeroCampo.equals("PE")){
                            if(empleo != null){
                                reporteBuro.save(flush:true)
                                empleo.reporteBuroCredito = reporteBuro
                                empleo.save(flush:true)
                                //empleos.add(empleo)
                            }
                            empleo = new EmpleoBuroDeCredito()
                            empleo.razonSocial = datosPersonales
                        }
                        if(numeroCampo.equals("00")){empleo.direccionLinea1 = datosPersonales }
                        if(numeroCampo.equals("01")){empleo.direccionLinea2 = datosPersonales }
                        if(numeroCampo.equals("02")){empleo.colonia = datosPersonales }
                        if(numeroCampo.equals("03")){empleo.municipio = datosPersonales }
                        if(numeroCampo.equals("04")){empleo.ciudad = datosPersonales }
                        if(numeroCampo.equals("05")){empleo.estado = datosPersonales }
                        if(numeroCampo.equals("06")){empleo.codigoPostal = datosPersonales }
                        if(numeroCampo.equals("07")){empleo.numeroTelefonico = datosPersonales }
                        if(numeroCampo.equals("08")){empleo.extensionTelefonica = datosPersonales }
                        if(numeroCampo.equals("09")){empleo.numeroFax = datosPersonales }
                        if(numeroCampo.equals("10")){empleo.cargo = datosPersonales }
                        if(numeroCampo.equals("11")){empleo.fechaContratacion = datosPersonales }
                        if(numeroCampo.equals("12")){empleo.claveMonedaPago = datosPersonales }
                        if(numeroCampo.equals("13")){empleo.sueldo = datosPersonales }
                        if(numeroCampo.equals("14")){empleo.periodoDePago = datosPersonales }
                        if(numeroCampo.equals("15")){empleo.numeroEmpleado = datosPersonales }
                        if(numeroCampo.equals("16")){empleo.fechaUltimoDiaEmpleo = datosPersonales }
                        if(numeroCampo.equals("20")){empleo.origenRazonSocialDomicilio = datosPersonales }
                        break;
                    case "PI":
                        if(numeroCampo.equals("PI")){
                            if(referencia != null){
                                reporteBuro.save(flush:true)
                                referencia.reporteBuroCredito = reporteBuro
                                referencia.save(flush:true)
                                //referencias.add(referencia)
                            }
                            referencia = new RefCredBuroCredito()
                            referencia.numeroCuenta = datosPersonales
                        }
                        if(numeroCampo.equals("00")){referencia.claveUsuario = datosPersonales }
                        if(numeroCampo.equals("01")){referencia.nombreUsuario = datosPersonales }
                        break;
                    case "CL":
                        if(numeroCampo.equals("CL")){
                            sintetiza.reporteBuroCredito = reporteBuro
                            sintetiza.plantillaSolicitada = datosPersonales 
                        }
                        if(numeroCampo.equals("00")){sintetiza.identificador = datosPersonales }
                        if(numeroCampo.equals("01")){sintetiza.numeroCaracteristica = datosPersonales }
                        if(numeroCampo.equals("02")){sintetiza.valorCaracteristica = datosPersonales }
                        if(numeroCampo.equals("03")){sintetiza.codigoError = datosPersonales }
                        break;
                    case "TL":
                        if(numeroCampo.equals("TL")){
                            if(credito != null){
                                reporteBuro.save(flush:true)
                                credito.reporteBuroCredito = reporteBuro
                                credito.save(flush:true)
                                //creditos.add(credito)
                            }
                            credito = new CreditoClienteBuroCredito()
                            credito.fechaActualizacion = datosPersonales
                        }
                        if(numeroCampo.equals("00")){credito.registroImpugnado = datosPersonales }
                        if(numeroCampo.equals("01")){credito.claveUsuario = datosPersonales }
                        if(numeroCampo.equals("02")){credito.nombreUsuario = datosPersonales }
                        if(numeroCampo.equals("03")){credito.numeroTelefonoUsuario = datosPersonales }
                        if(numeroCampo.equals("04")){credito.numeroDeCuenta = datosPersonales }
                        if(numeroCampo.equals("05")){credito.tipoResponsabilidadCuenta = datosPersonales }
                        if(numeroCampo.equals("06")){credito.tipoDeCuenta = datosPersonales }
                        if(numeroCampo.equals("07")){credito.tipoContratoProducto = datosPersonales }
                        if(numeroCampo.equals("08")){credito.monedaCredito = datosPersonales }
                        if(numeroCampo.equals("09")){credito.importeDelAvaluo = datosPersonales }
                        if(numeroCampo.equals("10")){credito.numeroPagos = datosPersonales }
                        if(numeroCampo.equals("11")){credito.frecuenciaDePagos = datosPersonales }
                        if(numeroCampo.equals("12")){credito.montoAPagar = datosPersonales }
                        if(numeroCampo.equals("13")){credito.fechaAperturaDeCuenta = datosPersonales }
                        if(numeroCampo.equals("14")){credito.fechaUltimoPago = datosPersonales }
                        if(numeroCampo.equals("15")){credito.fechaUltimaCompra = datosPersonales }
                        if(numeroCampo.equals("16")){credito.fechaCierre = datosPersonales }
                        if(numeroCampo.equals("17")){credito.fechaDeReporteDeInformacion = datosPersonales }
                        if(numeroCampo.equals("18")){credito.montoAReportar = datosPersonales }
                        if(numeroCampo.equals("19")){credito.ultimaFechaConSaldoEnCero = datosPersonales }
                        if(numeroCampo.equals("20")){credito.garantia = datosPersonales }
                        if(numeroCampo.equals("21")){credito.creditoMaximoAutorizado = datosPersonales }
                        if(numeroCampo.equals("22")){credito.saldoActual = datosPersonales }
                        if(numeroCampo.equals("23")){credito.limiteCredito = datosPersonales }
                        if(numeroCampo.equals("24")){credito.saldoVencido = datosPersonales }
                        if(numeroCampo.equals("25")){credito.numeroDePagosVencidos = datosPersonales }
                        if(numeroCampo.equals("26")){credito.clasificacionPuntialidadPago = datosPersonales }
                        if(numeroCampo.equals("27")){credito.historicoPagos = datosPersonales }
                        if(numeroCampo.equals("28")){credito.fechaMasRecienteHistoricoDePagos = datosPersonales }
                        if(numeroCampo.equals("29")){credito.fechaMasAntiguaHistoricoDePagos = datosPersonales }
                        if(numeroCampo.equals("30")){credito.claveDeObservacion = datosPersonales }
                        if(numeroCampo.equals("31")){credito.totalPagosReportados = datosPersonales }
                        if(numeroCampo.equals("32")){credito.totalPagosConMop02 = datosPersonales }
                        if(numeroCampo.equals("33")){credito.totalPagosConMop03 = datosPersonales }
                        if(numeroCampo.equals("34")){credito.totalPagosConMop04 = datosPersonales }
                        if(numeroCampo.equals("35")){credito.totalPagosConMop05oMayor = datosPersonales }
                        if(numeroCampo.equals("36")){credito.saldoEnlaMorosidadHistoricaMasAlta = datosPersonales }
                        if(numeroCampo.equals("37")){credito.fechaEnlaMorosidadHistoricaMasAlta = datosPersonales }
                        if(numeroCampo.equals("38")){credito.clasificacionPuntualidadPagoMopMorosidadMasAlta = datosPersonales }
                        if(numeroCampo.equals("42")){credito.fechaInicioRestructura = datosPersonales }
                        if(numeroCampo.equals("45")){credito.montoUltimoPago = datosPersonales }
                        break;
                    case "IQ":
                        if(numeroCampo.equals("IQ")){
                            if(consulta != null){
                                reporteBuro.save(flush:true)
                                consulta.reporteBuroCredito = reporteBuro
                                consulta.save(flush:true)
                                //consultas.add(consulta)
                            }
                            consulta = new ConsultasBuroCredito()
                            consulta.fechaConsulta = datosPersonales
                        }
                        if(numeroCampo.equals("01")){consulta.claveDelUsuario = datosPersonales }
                        if(numeroCampo.equals("02")){consulta.nombreDelUsuario = datosPersonales }
                        if(numeroCampo.equals("03")){consulta.numeroDeTelefono = datosPersonales }
                        if(numeroCampo.equals("04")){consulta.tipoDeContrato = datosPersonales }
                        if(numeroCampo.equals("05")){consulta.monedaDelCredito = datosPersonales }
                        if(numeroCampo.equals("06")){consulta.importeDelContrato = datosPersonales }
                        if(numeroCampo.equals("07")){consulta.tipoResponsabilidadCuenta = datosPersonales }
                        if(numeroCampo.equals("08")){consulta.indicadorDeClienteNuevo = datosPersonales }	
                        break;
                    case "RS":
                        if(numeroCampo.equals("RS")){
                            resumen.reporteBuroCredito = reporteBuro
                            resumen.fechaIntegracion = datosPersonales 
                        }
                        if(numeroCampo.equals("00")){resumen.numeroCuentaMop07 = datosPersonales }
                        if(numeroCampo.equals("01")){resumen.numeroCuentaMop06 = datosPersonales }
                        if(numeroCampo.equals("02")){resumen.numeroCuentaMop05 = datosPersonales }
                        if(numeroCampo.equals("03")){resumen.numeroCuentaMop04 = datosPersonales }
                        if(numeroCampo.equals("04")){resumen.numeroCuentaMop03 = datosPersonales }
                        if(numeroCampo.equals("05")){resumen.numeroCuentaMop02 = datosPersonales }
                        if(numeroCampo.equals("06")){resumen.numeroCuentaMop01 = datosPersonales }
                        if(numeroCampo.equals("07")){resumen.numeroCuentaMop00 = datosPersonales }
                        if(numeroCampo.equals("08")){resumen.numeroCuentaMopUR = datosPersonales }
                        if(numeroCampo.equals("09")){resumen.numeroCuentas = datosPersonales }
                        if(numeroCampo.equals("10")){resumen.cuentasPagosFijosHipotecarios = datosPersonales }
                        if(numeroCampo.equals("11")){resumen.noCuentasRevolventes = datosPersonales }
                        if(numeroCampo.equals("12")){resumen.noCuentasCerradas = datosPersonales }
                        if(numeroCampo.equals("13")){resumen.noCuentasConMorosidadActual = datosPersonales }
                        if(numeroCampo.equals("14")){resumen.noCuentasConHistorialMorosidad = datosPersonales }
                        if(numeroCampo.equals("15")){resumen.noCuentasEnAclaracion = datosPersonales }
                        if(numeroCampo.equals("16")){resumen.noSolicitudConsultas = datosPersonales }
                        if(numeroCampo.equals("17")){resumen.nuevaDireccionEn60Dias = datosPersonales }
                        if(numeroCampo.equals("18")){resumen.mensajesAlerta = datosPersonales }
                        if(numeroCampo.equals("19")){resumen.declarativa = datosPersonales }
                        if(numeroCampo.equals("20")){resumen.monedaCredito = datosPersonales }
                        if(numeroCampo.equals("21")){resumen.totalCreditoMaximosCuentasRevol = datosPersonales }
                        if(numeroCampo.equals("22")){resumen.totalLimiteCreditoCuentasRevol = datosPersonales }
                        if(numeroCampo.equals("23")){resumen.totalSaldoActualCuentasRevol = datosPersonales }
                        if(numeroCampo.equals("24")){resumen.totalSaldosVencidosCuentasRevol = datosPersonales }
                        if(numeroCampo.equals("25")){resumen.totalImportePagoCuentasRevol = datosPersonales }
                        if(numeroCampo.equals("26")){resumen.porcentajeLimiteCreditoCuentasRevol = datosPersonales }
                        if(numeroCampo.equals("27")){resumen.totalCreditoMaximoCuentasPagosFijosHipo = datosPersonales }
                        if(numeroCampo.equals("28")){resumen.totalSaldosActualesCuentasPagosFijosHipo = datosPersonales }
                        if(numeroCampo.equals("29")){resumen.totalSaldoVencidoCuentasPagosFijosHipo = datosPersonales }
                        if(numeroCampo.equals("30")){resumen.totalImporteCuentasPagosFijosHipo = datosPersonales }
                        if(numeroCampo.equals("31")){resumen.numeroCuentaMop96 = datosPersonales }
                        if(numeroCampo.equals("32")){resumen.numeroCuentaMop97 = datosPersonales }
                        if(numeroCampo.equals("33")){resumen.numeroCuentaMop99 = datosPersonales }
                        if(numeroCampo.equals("34")){resumen.fechaAperturaCuentaMasAntigua = datosPersonales }
                        if(numeroCampo.equals("35")){resumen.fechaAperturaCuentaMasReciente = datosPersonales }
                        if(numeroCampo.equals("36")){resumen.numeroSolicitudesInformeBuro = datosPersonales }
                        if(numeroCampo.equals("37")){resumen.fechaConsultaMasReciente = datosPersonales }
                        if(numeroCampo.equals("38")){resumen.numeroCuentasEnDespachoCobranza = datosPersonales }
                        if(numeroCampo.equals("39")){resumen.fechaAperturaMasRecienteDespachoCobranza = datosPersonales }
                        if(numeroCampo.equals("40")){resumen.numeroSolicitudesInformeBuroPorDespachoCobranza = datosPersonales }
                        if(numeroCampo.equals("41")){resumen.fechaConsultaMasRecientePorDespachoCobranza = datosPersonales }
                        break;
                    case "HI":
                        if(numeroCampo.equals("HI")){
                            if(alerta != null){
                                reporteBuro.save(flush:true)
                                alerta.reporteBuroCredito = reporteBuro
                                alerta.save(flush:true)
                                //alertas.add(alerta)
                            }
                            alerta = new AlertaBuroCredito()
                            alerta.fechaReporte = datosPersonales
                        }
                        if(numeroCampo.equals("00")){alerta.codigoPrevension = datosPersonales }
                        if(numeroCampo.equals("01")){alerta.tipoUsuario = datosPersonales }
                        if(numeroCampo.equals("02")){alerta.mensaje = datosPersonales }
                        break;
                    case "HR":
                        if(numeroCampo.equals("HR")){
                            if(alertaHr != null){
                                reporteBuro.save(flush:true)
                                alertaHr.reporteBuroCredito = reporteBuro
                                alertaHr.save(flush:true)
                                //alertasHr.add(alertaHr)
                            }
                            alertaHr = new AlertaBuroCredito()
                            alertaHr.fechaReporte = datosPersonales
                        }
                        if(numeroCampo.equals("00")){alertaHr.codigoPrevension = datosPersonales }
                        if(numeroCampo.equals("01")){alertaHr.tipoUsuario = datosPersonales }
                        if(numeroCampo.equals("02")){alertaHr.mensaje = datosPersonales }
                        break;
                    case "CR":
                        if(numeroCampo.equals("CR")){
                            declarativa.reporteBuroCredito = reporteBuro
                            declarativa.tipoSegmento = datosPersonales 
                        }
                        if(numeroCampo.equals("00")){declarativa.declarativaCliente = datosPersonales }
                        break;
                    case "SC":
                        if(numeroCampo.equals("SC")){
                            if(score != null){
                                reporteBuro.save(flush:true)
                                score.reporteBuroCredito = reporteBuro
                                score.save(flush:true)
                            }
                            score = new ScoreBuroCredito()
                            score.nombreScore = datosPersonales
                        }
                        if(numeroCampo.equals("00")){score.codigoScore = datosPersonales }
                        if(numeroCampo.equals("01")){score.valorScore = datosPersonales }
                        if(numeroCampo.equals("02")){score.codigoRazonPrimera = datosPersonales }
                        if(numeroCampo.equals("03")){score.codigoRazonSegunda = datosPersonales }
                        if(numeroCampo.equals("04")){score.codigoRazonTercera = datosPersonales }
                        if(numeroCampo.equals("06")){score.codigoError = datosPersonales }
                        break;
                    case "ES":
                        if(numeroCampo.equals("ES")){
                            segfinal.reporteBuroCredito = reporteBuro
                            segfinal.longiudTransmision = datosPersonales 
                        }
                        if(numeroCampo.equals("00")){segfinal.numeroControlConsulta = datosPersonales }
                        if(numeroCampo.equals("01")){segfinal.finRegistroRespuesta = datosPersonales }
                        break;
                    }
                    indiceInicial = indiceInicial + longitud + saltoNumeroCampo  + saltoNumeroCampo
                }
				
                if(direccion != null){
                    direccion.reporteBuroCredito = reporteBuro
                    direccion.save(flush:true)
                }
                if(empleo != null){
                    empleo.reporteBuroCredito = reporteBuro
                    empleo.save()
                }
                if(referencia != null){
                    referencia.reporteBuroCredito = reporteBuro
                    referencia.save(flush:true)
                }
                if(credito != null){
                    credito.reporteBuroCredito = reporteBuro
                    credito.save(flush:true)
                }
                if(consulta != null){
                    consulta.reporteBuroCredito = reporteBuro
                    consulta.save(flush:true)
                }
                if(alerta != null){
                    alerta.reporteBuroCredito = reporteBuro
                    alerta.save(flush:true)
                }
                if(alertaHr != null){
                    alertaHr.reporteBuroCredito = reporteBuro
                    alertaHr.save(flush:true)
                }
				
                if(score != null){
                    score.reporteBuroCredito = reporteBuro
                    score.save(flush:true)
                }
                reporteBuro.save(flush:true)
                resumen.save(flush:true)
                declarativa.save(flush:true)
                segfinal.save(flush:true)
            }else{
                reporteBuro.errorConsulta = reporte
                reporteBuro.save(flush:true)
                obtenerTipoError(reporteBuro, reporte)
            }	
        }catch(Exception e){
            log.error("Exception obtenerDatosPersonales: ", e)
        }
        return reporteBuro
    }
	
    def obtenerFecha(String dia, String mes, String anio ){
		
        def diaN = "01"
        def mesN = "01"
        if(dia.length()<2){
            diaN = "0"+dia
        }else{
            diaN = dia
        }
        if(mes.equalsIgnoreCase("Enero")){mesN = "01"  }else if(mes.equalsIgnoreCase("Febrero")){mesN = "02"}else if(mes.equalsIgnoreCase("Marzo")){mesN = "03"}
        else if(mes.equalsIgnoreCase("Abril")){mesN = "04"}else if(mes.equalsIgnoreCase("Mayo")){mesN = "05"}else if(mes.equalsIgnoreCase("Junio")){mesN = "06"}
        else if(mes.equalsIgnoreCase("Julio")){mesN = "07"}else if(mes.equalsIgnoreCase("Agosto")){mesN = "08"}else if(mes.equalsIgnoreCase("Septiembre")){mesN = "09"}
        else if(mes.equalsIgnoreCase("Octubre")){mesN = "10"}else if(mes.equalsIgnoreCase("Noviembre")){mesN = "11"}else if(mes.equalsIgnoreCase("Diciembre")){mesN = "12"}
        return diaN+mesN+anio
    }
    
    def obtenerFechaTipo2(String dia, String mes, String anio ){
        
        def diaN = "01"
        def mesN = "01"
        if(dia.length()<2){
            diaN = "0"+dia
        }else{
            diaN = dia
        }
        if(mes.length()<2){
            mesN = "0"+mes
        }else{
            mesN = mes
        }
        return diaN+mesN+anio
    }

    String cambiarCaracteresEspeciales(String response){
        String response_enconding = new String(response.getBytes("UTF-8"))
        StringBuilder sb = new StringBuilder()
        response_enconding.each { character ->
            int ascii = (int) character
            if(ascii ==181 || ascii == 193){ascii=65} //A
            if(ascii ==144 || ascii == 201){ascii=69} //E
            if(ascii ==214 || ascii == 205){ascii=73} //I
            if(ascii ==224 || ascii == 211){ascii=79} //O
            if(ascii ==233 || ascii == 218){ascii=85} //U
            if(ascii ==209 || ascii == 241){ascii=78} //ENIE
            if(ascii ==220 || ascii == 252){ascii=85} //ü
            if(ascii ==36){ascii=78} //$
            if(ascii ==64){ascii=78} //@
            if(ascii ==37){ascii=78} //%
            if(ascii ==35){ascii=78} //#
            sb.append((char)ascii)
        }
        return sb.toString()
    }
	
    String corregirCaracteres(String response){
        return response.replace("\$","N").replace("&","N")
    }
		
    def generarCadenaBC(BitacoraBuroCredito bitacoraDeBuro){
        String response = bitacoraDeBuro?.respuesta
        Constants.TipoConsulta tipoConsulta = bitacoraDeBuro?.tipoConsulta
        
        def cadenaBuro
        try {
            switch(tipoConsulta.ordinal()) {
            case Constants.TipoConsulta.AUTENTICADOR.ordinal():
                Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new StringReader(response)));
            NodeList reporteImpreso = doc.getElementsByTagName("ReporteImpreso");
            if (reporteImpreso.getLength() > 0) {
                Element  reporte = (Element)reporteImpreso.item(0);
                cadenaBuro = reporte.getTextContent()
                }
                break;
                
            case Constants.TipoConsulta.TRADICIONAL.ordinal():
                cadenaBuro = response
                break;
            }
            
            cadenaBuro = cadenaBuro.replaceAll(/\$/,"N").replaceAll('&','N').replaceAll('@','N').replaceAll('ñ','N').replaceAll('Ñ','N')
        } catch(Exception e){
            cadenaBuro = ""
            log.error("Ocurrio un error al parsear la respuesta del buró...")
            log.error("Respuesta a parsear: " + response)
            log.error("Excepcion: " + e.getMessage() + "  - " + e.toString())
        }
        return cadenaBuro
    }
    
    def calcularMontoAPagar(def solicitudId, def asalariado, def porcentajeDeDescuento ) {
        double montoAPagar = 0
        SolicitudDeCredito solicitud = SolicitudDeCredito.get(solicitudId)
        if(solicitud && solicitud?.reporteBuroCredito) {
            try {
                List<CreditoClienteBuroCredito> creditos = CreditoClienteBuroCredito.findAllByReporteBuroCredito(solicitud.reporteBuroCredito)

                List<CreditoClienteBuroCredito> validos = new ArrayList<>()
                creditos.each { credito ->
                    def nombreUsuario = credito.nombreUsuario ? credito.nombreUsuario.trim() : ""
                    println "Revisando cuenta -> id: " + credito.id + " claveDeObservacion: " + credito.claveDeObservacion + ",  claveUsuario: " + credito.claveUsuario + ", tipoDeCuenta: " + credito.tipoDeCuenta + ", tipoContratoProducto: " + credito.tipoContratoProducto + ", fechaCierre: " + credito.fechaCierre + ", montoAPagar: " + credito.montoAPagar + ", saldoActual: " + credito.saldoActual
                    if (credito.tipoContratoProducto != "UT" && credito.tipoContratoProducto != "UU" && credito.tipoContratoProducto != "VV" && nombreUsuario != "LIBERTAD SFP" && nombreUsuario != "COMUNICACIONES") {
                        validos.add(credito)
                        println "Se toma en cuenta? SI"
                    } else { //temporal
                        println "Se toma en cuenta? NO"
                    }
                }

                List<CreditoClienteBuroCredito> cuentasAbiertas = new ArrayList<>()
                validos.each { credito ->
                    if (!credito.fechaCierre) {
                        cuentasAbiertas.add(credito)
                    }
                }
                println " ***** Iniciando procedimiento de cálculo del monto a pagar (Solo cuentas abiertas) ***** "
                cuentasAbiertas.each { credito ->
                    println "Obtiendo saldo de la cuenta " + credito.id + " ..."
                    int saldoAPagar = Integer.parseInt(credito.saldoActual.replace("+", "").trim())
                    println "Saldo a Pagar (Sin Aplicar Reglas): " + saldoAPagar
                    println "Monto a Pagar (Sin Aplicar Reglas): " + credito.montoAPagar
                    if (!credito.montoAPagar) {
                        println "Entra a 1"
                        montoAPagar += saldoAPagar * 0.05
                    } else if (Integer.parseInt(credito.montoAPagar?.trim()) >= saldoAPagar) {
                        println "Entra a 2"
                        montoAPagar += Integer.parseInt(credito.montoAPagar.trim()) * 0.05
                    } else if (credito.tipoDeCuenta.trim().equals("I") || credito.tipoDeCuenta.trim().equals("M")) {
                        println "Entra a 3"
                        montoAPagar += Integer.parseInt(credito.montoAPagar.trim())
                    } else if ((credito.tipoDeCuenta.trim().equals("R") || credito.tipoDeCuenta.trim().equals("O")) && saldoAPagar > Integer.parseInt(credito.montoAPagar?.trim())) {
                        println "Entra a 4"
                        montoAPagar += Integer.parseInt(credito.montoAPagar.trim())
                    }
                    println "Monto a Pagar Acumulado: " + montoAPagar
                }
                println "Monto a Pagar (Preliminar): " + montoAPagar
                montoAPagar = montoAPagar * porcentajeDeDescuento
                println "Monto a Pagar Final: " + montoAPagar 
                println " ***** Terminando procedimiento de cálculo del monto a pagar ***** "
            } catch(Exception e) {
                log.error("Ocurrio un error al calcular el monto a pagar", e)
            }
        }
        return montoAPagar
    }

    private String buildINTLRequest(def datosPersonales, def direccion, SolicitudDeCredito solicitud, ConfiguracionBuroCredito configuracion, String referenciaOperador) {
        // SEGMENTO INTL - INICIO

        //etiqueta: Etiqueta del segmento
        String cadenaINTL = "INTL"
        //etiqueta: Version
        cadenaINTL += configuracion.encabezadoVersion
        //etiqueta: Numero de referencia del operador. Si se envía otro dato diferente de 25 espacios no se realizará la petición
        cadenaINTL += referenciaOperador
        //etiqueta: Clave del producto requerido
        cadenaINTL += configuracion.encabezadoProductoRequerido
        //etiqueta: Clave del pais
        cadenaINTL += configuracion.encabezadoClavePais
        //etiqueta: Reservado
        cadenaINTL += configuracion.encabezadoIdentificadorBuro
        //etiqueta: Clave de usuario
        cadenaINTL += configuracion.encabezadoClaveUsuario
        //etiqueta: Contraseña
        cadenaINTL += configuracion.encabezadoPassword
        //etiqueta: Tipo de resposabilidad
        cadenaINTL += configuracion.encabezadoTipoConsulta
        //etiqueta: Tipo de contrato o producto
        cadenaINTL += configuracion.encabezadoTipoContrato
        //etiqueta: Moneda del credito
        cadenaINTL += configuracion.encabezadoClaveUnidadMonetaria
        //etiqueta: Importe del contrato
        cadenaINTL += "000000000"
        //etiqueta: Idioma
        cadenaINTL += configuracion.encabezadoIdioma
        //etiqueta: Tipo de salida
        cadenaINTL += configuracion.encabezadoTipoSalida
        //etiqueta: Tamaño del bloque de respuesta
        cadenaINTL += " "
        //etiqueta: Identifiacion de la impresora
        cadenaINTL += "    "
        //etiqueta: Reservado para uso futuro
        cadenaINTL += "0000000"


        //SEGMENTO PN - NOMBRE DEL CLIENTE
        String apellidoPaterno = datosPersonales.apellidoPaterno.trim()
        String apellidoMaterno = (datosPersonales.apellidoMaterno) ? datosPersonales.apellidoMaterno.trim(): "NO PROPORCIONADO"
        String nombre = datosPersonales.nombre.trim()
        String [] nombres = (nombre).tokenize(" ")
        nombre = (nombres.length > 1) ? nombres[1] : nombre

        if(apellidoPaterno.size() > 26 || apellidoMaterno.size()> 26 || nombre.size() > 26){
            throw new BusinessException("Segmento PN. Longitud inválida");
        }

        //etiqueta PN: Apellido paterno
        cadenaINTL += "PN"
        cadenaINTL += getStringSize(apellidoPaterno.size().toString(), 2)
        cadenaINTL += cambiarCaracteresEspeciales(apellidoPaterno.toUpperCase())
        //etiqueta 00: Apellido materno
        cadenaINTL += "00"
        cadenaINTL += getStringSize(apellidoMaterno.size().toString(), 2)
        cadenaINTL += cambiarCaracteresEspeciales(apellidoMaterno.toUpperCase())
        //etiqueta 01: Apellido adicional. Se omite por ser opcional
        //etiqueta 02: Nombre
        cadenaINTL += "02"
        cadenaINTL += getStringSize(nombre.size().toString(), 2)
        cadenaINTL += cambiarCaracteresEspeciales(nombre.toUpperCase())
        //etiqueta 03: Segundo nombre. Se omite por ser opcional
        //etiqueta 04: Fecha de nacimiento. Se omite por ser opcional. Si se agrega no reportar fecha para menores de 18 años
        //etiqueta 05: RFC
        cadenaINTL += "05"
        cadenaINTL += "13"
        cadenaINTL += datosPersonales.rfc
        //etiqueta 06: Prefijo personal o profesional. Se omite por ser opcional
        //etiqueta 07: Sufijo personal del cliente. Se omite por ser opcional
        //etiqueta 08: Nacionalidad. Se omite por ser opcional
        //etiqueta 09: Tipo de residencia. Se omite por ser opcional
        //etiqueta 10: Numero de licencia de conducir. Se omite por ser opcional
        //etiqueta 11: Estado civil. Se omite por ser opcional
        //etiqueta 12: Genero. Se omite por ser opcional
        //etiqueta 13: Numero de cedula profesional. Se omite por ser opcional
        //etiqueta 14: Numero de registro electoral. Se omite por ser opcional
        //etiqueta 15: CURP. Se omite por ser opcional
        //etiqueta 16: Clave de pais. Se omite por ser opcional
        //etiqueta 17: Numero de dependientes. Se omite por ser opcional
        //etiqueta 18: Edades de los dependientes. Se omite por ser opcional


        //SEGMENTO PA - DIRECCION DEL CLIENTE
        String numeroInterior = (direccion.numeroInterior) ? " " + direccion.numeroInterior.trim().toUpperCase() : ""
        String numeroExterior = direccion.numeroExterior.trim().toUpperCase()
        String calle = cambiarCaracteresEspeciales(direccion.calle.trim().toUpperCase())
        String domicilio = calle + " " + numeroExterior + numeroInterior
        Municipio municipio = Municipio.findById(direccion.delegacion)
        Integer municipioSize = (municipio) ? municipio.nombre.trim().size() : null
        String ciudad = (direccion.ciudad) ? direccion.ciudad.trim() : null
        Estado estado = Estado.findById(direccion.estado)
        String est = estado.siglasrenapo.trim().toUpperCase()
        String codigoPostal = direccion.codigoPostal.trim()
        String pais = "MX"

        if((municipio && municipioSize > 40) || (!municipio && ciudad && ciudad.size() > 40)){
            throw new BusinessException("Segmento PA. Longitud inválida");
        }

        String direccion2 = null
        if (domicilio.size() > 40) {
            String direccion1 = domicilio.substring(0, 40)
            direccion2 = domicilio.substring(40)
            domicilio = direccion1
        }

        cadenaINTL += "PA"
        cadenaINTL += getStringSize(domicilio.size().toString(), 2)
        cadenaINTL += domicilio
        //etiqueta 00: segunda linea de direccion.
        if (direccion2) {
            cadenaINTL += "00"
            cadenaINTL += getStringSize(direccion2.size().toString(), 2)
            cadenaINTL += direccion2
        }
        //etiqueta 01: Colonia o poblacion. Se omite por ser opcional
        //etiqueta 02: Delegación o municipio. Si no se cuenta con la inf. La etiqueta 03 se hace requerida
        if (municipio) {
            cadenaINTL += "02"
            cadenaINTL += getStringSize(municipioSize.toString(), 2)
            cadenaINTL += cambiarCaracteresEspeciales(municipio.nombre.toUpperCase())
        } else {
            //etiqueta 03: Ciudad. Si no se cuenta con inf. La etiqueta 02 se hace requerida
            cadenaINTL += "03"
            cadenaINTL += getStringSize(ciudad.size().toString(), 2)
            cadenaINTL += ciudad.toUpperCase()
        }
        //etiqueta 04: Estado
        cadenaINTL += "04"
        cadenaINTL += getStringSize(est.size().toString(), 2)
        cadenaINTL += est
        //etiqueta 05: Codigo postal
        cadenaINTL += "05"
        cadenaINTL += getStringSize(codigoPostal.size().toString(), 2)
        cadenaINTL += codigoPostal
        //etiqueta 06: Fecha de residencia. Se omite por ser opcional
        //etiqueta 07: Numero de telefono. Se omite por ser opcional
        //etiqueta 08: Extension telefonica. Se omite por ser opcional
        //etiqueta 09: Numero de fax. Se omite por ser opcional
        //etiqueta 10: Tipo de domicilio. Se omite por ser opcional
        //etiqueta 11: Indicador especial de domicilio. Se omite por ser opcional
        //etiqueta 12: Fecha de reporte de la direccion. Se omite por ser opcional
        //etiqueta 13: Origen del domicilio
        cadenaINTL += "13"
        cadenaINTL += getStringSize(pais.size().toString(), 2)
        cadenaINTL += pais


        //SEGMENTO PE - EMPLEO DEL CLIENTE. SE OMITE POR SER OPCIONAL
        //SEGMENTO PI - REFERENCIAS CREDITICIAS. SE OMITE POR SER OPCIONAL
        //SEGMENTO CL - GENERA CRITERIOS ADICIONALES Y PERSONALIZADOS. SI ES REQUERIDO SE DEBE SOLICITAR EL SERVICIO
        //SEGMENTO ES - CIERRE TRADICIONAL

        Integer tamanoCadenaIntl = cadenaINTL.size() + 15
        String intlLengthString = getStringSize(tamanoCadenaIntl.toString(), 5)

        String cierre = getIntlLength(intlLengthString)
        return cadenaINTL + cierre
    }

    private String getStringSize(String data, Integer s){
        Integer d = Integer.parseInt(data)
        String size = "%0"+s+"d"
        return String.format(size, d)
    }

    private String getIntlLength(String length){
        def cierre = ""
        //etiqueta ES: Longitud de registro
        cierre += "ES"
        cierre += "05"
        cierre += length
        //etiqueta 00: Marca de fin
        cierre += "00"
        cierre += "02"
        cierre += "**"

        return cierre
    }
    
    private String getFolioConsultaTradicional(ReporteBuroCredito reporteBuro){
        def criteria = SegFinBuroCredito.createCriteria()
        SegFinBuroCredito segmento = criteria.get {
            eq ('reporteBuroCredito', reporteBuro)
            
            projections {
                property('numeroControlConsulta', 'numeroControlConsulta')
            }
            
            resultTransformer(Transformers.aliasToBean(SegFinBuroCredito.class))
        }
        
        return segmento.numeroControlConsulta
    }

    private BitacoraBuroCredito getRequestBC(SolicitudDeCredito solicitud) {
        BitacoraBuroCredito bitacora = BitacoraBuroCredito.createCriteria().get {
            DetachedCriteria subquery = DetachedCriteria.forClass(BitacoraBuroCredito).with {
                setProjection(Projections.max('id'))
                add(Restrictions.eq("solicitud.id", solicitud.id))
            }
            add(Subqueries.propertyEq('id', subquery))
        }

        return bitacora
    }
}
